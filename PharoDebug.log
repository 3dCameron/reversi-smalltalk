THERE_BE_DRAGONS_HERE
Instance of ByteSymbol did not understand #definition
3 November 2019 5:52:11.135553 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ByteSymbol(Object)>>doesNotUnderstand: #definition
	Receiver: #transcript
	Arguments and temporary variables: 
		aMessage: 	definition
		exception: 	MessageNotUnderstood: ByteSymbol>>definition
		resumeValue: 	ni
	Receiver's instance variables: 
#transcript

[ :stream | 
stream nextPutAll: aClass definition.
aClass hasComment
	ifTrue: [ stream
			cr;
			cr;
			cr;
			nextPutAll: aClass comment ] ] in FinderUI>>buildDescriptionOf:
	Receiver: a FinderUI
	Arguments and temporary variables: 
		aClass: 	#transcript
		stream: 	a WriteStrea
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(45959936) named: Finder an Edita...etc...
		announcer: 	an Announcer
		selection: 	a MorphTreeMorphSingleSelection
		rootItems: 	nil
		autoMultiSelection: 	false
		headerLabel: 	nil
		multiSelection: 	false
		wrapBlockOrSelector: 	[ :i | i asString ]
		isCheckList: 	false
		enabled: 	nil
		finder: 	a Finder
		forceSearch: 	false
		searchingTextArea: 	an EditableDropListMorph(329196544)
		sourceTextArea: 	a RubScrolledTextMorph(1004455680)
		useRegExCheckbox: 	a CheckboxMorph(520076800)
		searchedTextList: 	an OrderedCollection('Transcript')
		sourceTextModel: 	a RubScrolledTextModel


String class(SequenceableCollection class)>>new:streamContents:
	Receiver: String
	Arguments and temporary variables: 
		newSize: 	100
		blockWithArg: 	[ :stream | 
stream nextPutAll: aClass definition.
aClass hasComm...etc...
		stream: 	a WriteStrea
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


String class(SequenceableCollection class)>>streamContents:
	Receiver: String
	Arguments and temporary variables: 
		blockWithArg: 	[ :stream | 
stream nextPutAll: aClass definition.
aClass hasComm...etc..
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


FinderUI>>buildDescriptionOf:
	Receiver: a FinderUI
	Arguments and temporary variables: 
		aClass: 	#transcrip
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(45959936) named: Finder an Edita...etc...
		announcer: 	an Announcer
		selection: 	a MorphTreeMorphSingleSelection
		rootItems: 	nil
		autoMultiSelection: 	false
		headerLabel: 	nil
		multiSelection: 	false
		wrapBlockOrSelector: 	[ :i | i asString ]
		isCheckList: 	false
		enabled: 	nil
		finder: 	a Finder
		forceSearch: 	false
		searchingTextArea: 	an EditableDropListMorph(329196544)
		sourceTextArea: 	a RubScrolledTextMorph(1004455680)
		useRegExCheckbox: 	a CheckboxMorph(520076800)
		searchedTextList: 	an OrderedCollection('Transcript')
		sourceTextModel: 	a RubScrolledTextModel


FinderUI>>sourceCode
	Receiver: a FinderUI
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(45959936) named: Finder an Edita...etc...
		announcer: 	an Announcer
		selection: 	a MorphTreeMorphSingleSelection
		rootItems: 	nil
		autoMultiSelection: 	false
		headerLabel: 	nil
		multiSelection: 	false
		wrapBlockOrSelector: 	[ :i | i asString ]
		isCheckList: 	false
		enabled: 	nil
		finder: 	a Finder
		forceSearch: 	false
		searchingTextArea: 	an EditableDropListMorph(329196544)
		sourceTextArea: 	a RubScrolledTextMorph(1004455680)
		useRegExCheckbox: 	a CheckboxMorph(520076800)
		searchedTextList: 	an OrderedCollection('Transcript')
		sourceTextModel: 	a RubScrolledTextModel


FinderUI>>updateSourceCode
	Receiver: a FinderUI
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(45959936) named: Finder an Edita...etc...
		announcer: 	an Announcer
		selection: 	a MorphTreeMorphSingleSelection
		rootItems: 	nil
		autoMultiSelection: 	false
		headerLabel: 	nil
		multiSelection: 	false
		wrapBlockOrSelector: 	[ :i | i asString ]
		isCheckList: 	false
		enabled: 	nil
		finder: 	a Finder
		forceSearch: 	false
		searchingTextArea: 	an EditableDropListMorph(329196544)
		sourceTextArea: 	a RubScrolledTextMorph(1004455680)
		useRegExCheckbox: 	a CheckboxMorph(520076800)
		searchedTextList: 	an OrderedCollection('Transcript')
		sourceTextModel: 	a RubScrolledTextModel


WeakMessageSend>>value
	Receiver: a WeakMessageSend(#updateSourceCode -> a FinderUI)
	Arguments and temporary variables: 
		strongReceiver: 	a FinderU
	Receiver's instance variables: 
		selector: 	#updateSourceCode
		shouldBeNil: 	#()
		arguments: 	a WeakArray()


Finder(Object)>>triggerEvent:
	Receiver: a Finder
	Arguments and temporary variables: 
		anEventSelector: 	#updateSourceCod
	Receiver's instance variables: 
		searchingString: 	'Transcript'
		selectedMethod: 	nil
		selectedClass: 	#transcript
		packagesSelection: 	Smalltalk
		currentSearchMode: 	#Classes
		environment: 	Smalltalk
		resultDictionary: 	a Dictionary(size 191)
		useRegEx: 	false


Finder>>selection:
	Receiver: a Finder
	Arguments and temporary variables: 
		aSelectionHolder: 	a MorphTreeMorphSingleSelection
		path: 	an OrderedCollection(Node(#transcript))
		methodNode: 	nil
		method: 	nil
		classNode: 	Node(#transcript)
		class: 	#transcrip
	Receiver's instance variables: 
		searchingString: 	'Transcript'
		selectedMethod: 	nil
		selectedClass: 	#transcript
		packagesSelection: 	Smalltalk
		currentSearchMode: 	#Classes
		environment: 	Smalltalk
		resultDictionary: 	a Dictionary(size 191)
		useRegEx: 	false


FinderUI>>selection:
	Receiver: a FinderUI
	Arguments and temporary variables: 
		aSelection: 	a MorphTreeMorphSingleSelectio
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(45959936) named: Finder an Edita...etc...
		announcer: 	an Announcer
		selection: 	a MorphTreeMorphSingleSelection
		rootItems: 	nil
		autoMultiSelection: 	false
		headerLabel: 	nil
		multiSelection: 	false
		wrapBlockOrSelector: 	[ :i | i asString ]
		isCheckList: 	false
		enabled: 	nil
		finder: 	a Finder
		forceSearch: 	false
		searchingTextArea: 	an EditableDropListMorph(329196544)
		sourceTextArea: 	a RubScrolledTextMorph(1004455680)
		useRegExCheckbox: 	a CheckboxMorph(520076800)
		searchedTextList: 	an OrderedCollection('Transcript')
		sourceTextModel: 	a RubScrolledTextModel


[ | selHolder |
selHolder := self newSelectionHolderWithNodePath: path.
self listModel selection: selHolder ] in MorphTreeListManager>>mouseUp:on:
	Receiver: a MorphTreeListManager
	Arguments and temporary variables: 
		event: 	[(502@425) mouseUp 5035776 nil]
		aNodeMorph: 	NodeMorph(Node(#transcript))
		path: 	an OrderedCollection(Node(#transcript))
		cmdOrCtrl: 	false
		clickedTheCheckbox: 	false
		selHolder: 	a MorphTreeMorphSingleSelectio
	Receiver's instance variables: 
		keystrokeActionSelector: 	#keyStroke:
		multipleSelection: 	false
		autoMultiSelection: 	false
		potentialDropMorph: 	nil
		firstClickedMorph: 	NodeMorph(Node(#transcript))
		lastClickedMorph: 	NodeMorph(Node(#transcript))
		columnDropUnabled: 	nil
		autoDeselection: 	nil
		searchedElement: 	nil
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		lastSelection: 	0
		client: 	a MorphTreeMorph(980742400)
		isSelectionUpdateFromView: 	true
		isCheckList: 	false
		autoTargetMorph: 	nil
		selectedMorphList: 	a LinkedList(NodeMorph(Node(#transcript)))
		removeOnlyLastSelected: 	false
		doubleClickSelector: 	#doubleClick


BlockClosure>>ensure:
	Receiver: [ | selHolder |
selHolder := self newSelectionHolderWithNodePath: path.
self listModel sel...etc...
	Arguments and temporary variables: 
		aBlock: 	[ isSelectionUpdateFromView := prev ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphTreeListManager>>mouseUp:on:
		startpc: 	313
		numArgs: 	0


MorphTreeListManager>>selectionUpdateFromViewWhile:
	Receiver: a MorphTreeListManager
	Arguments and temporary variables: 
		aBlock: 	[ | selHolder |
selHolder := self newSelectionHolderWithNodePath: path....etc...
		prev: 	fals
	Receiver's instance variables: 
		keystrokeActionSelector: 	#keyStroke:
		multipleSelection: 	false
		autoMultiSelection: 	false
		potentialDropMorph: 	nil
		firstClickedMorph: 	NodeMorph(Node(#transcript))
		lastClickedMorph: 	NodeMorph(Node(#transcript))
		columnDropUnabled: 	nil
		autoDeselection: 	nil
		searchedElement: 	nil
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		lastSelection: 	0
		client: 	a MorphTreeMorph(980742400)
		isSelectionUpdateFromView: 	true
		isCheckList: 	false
		autoTargetMorph: 	nil
		selectedMorphList: 	a LinkedList(NodeMorph(Node(#transcript)))
		removeOnlyLastSelected: 	false
		doubleClickSelector: 	#doubleClick


MorphTreeListManager>>mouseUp:on:
	Receiver: a MorphTreeListManager
	Arguments and temporary variables: 
		event: 	[(502@425) mouseUp 5035776 nil]
		aNodeMorph: 	NodeMorph(Node(#transcript))
		path: 	an OrderedCollection(Node(#transcript))
		cmdOrCtrl: 	false
		clickedTheCheckbox: 	fals
	Receiver's instance variables: 
		keystrokeActionSelector: 	#keyStroke:
		multipleSelection: 	false
		autoMultiSelection: 	false
		potentialDropMorph: 	nil
		firstClickedMorph: 	NodeMorph(Node(#transcript))
		lastClickedMorph: 	NodeMorph(Node(#transcript))
		columnDropUnabled: 	nil
		autoDeselection: 	nil
		searchedElement: 	nil
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		lastSelection: 	0
		client: 	a MorphTreeMorph(980742400)
		isSelectionUpdateFromView: 	true
		isCheckList: 	false
		autoTargetMorph: 	nil
		selectedMorphList: 	a LinkedList(NodeMorph(Node(#transcript)))
		removeOnlyLastSelected: 	false
		doubleClickSelector: 	#doubleClick


MorphTreeMorph>>mouseUp:
	Receiver: a MorphTreeMorph(980742400)
	Arguments and temporary variables: 
		event: 	[(502@425) mouseUp 5035776 nil]
		nodeMorph: 	NodeMorph(Node(#transcript))
		wasHigh: 	tru
	Receiver's instance variables: 
		bounds: 	(469.0@304.0) corner: (1159.0@548.0)
		owner: 	a StandardWindow(45959936) named: Finder
		submorphs: 	an Array(a ScrollBar(762102272) a Morph(1062828800) a MorphTreeTrans...etc...
		fullBounds: 	(469@304) corner: (1159@548)
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (198691072) [other:  (announcer -> an Announcer)]
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		model: 	a FinderUI
		scrollBar: 	a ScrollBar(762102272)
		scroller: 	a MorphTreeTransformMorph(480013824)
		getMenuSelector: 	#menu:shifted:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(66194432)
		columns: 	an OrderedCollection(a MorphTreeColumn)
		potentialDropMorph: 	nil
		rowInset: 	2
		columnInset: 	0
		columnResizers: 	an OrderedCollection()
		withHLines: 	false
		preferedPaneColor: 	nil
		indentGap: 	20
		expandedToggleImage: 	an ImageMorph(137322496)
		notExpandedToggleImage: 	an ImageMorph(510430464)
		resizerWidth: 	0
		gapAfterToggle: 	5
		hasToggleAtRoot: 	nil
		topHeader: 	a Morph(1062828800)
		topHeaderBackground: 	Color transparent
		unboundLastColumn: 	true
		columnDropUnabled: 	nil
		columnColors: 	{Color transparent. Color transparent}
		rowColors: 	{(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.13000977517...etc...
		nodeList: 	an Array(Node(#acceptDroppingMorph:event:inMorph:) Node(#activate) No...etc...
		iconBlock: 	nil
		treeLineWidth: 	0
		lineColorBlock: 	nil
		treeLineDashes: 	nil
		listManager: 	a MorphTreeListManager
		mouseOverAllowed: 	false
		maxNodeWidth: 	292.0
		enabled: 	true


MorphTreeMorph(Morph)>>handleMouseUp:
	Receiver: a MorphTreeMorph(980742400)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(469.0@304.0) corner: (1159.0@548.0)
		owner: 	a StandardWindow(45959936) named: Finder
		submorphs: 	an Array(a ScrollBar(762102272) a Morph(1062828800) a MorphTreeTrans...etc...
		fullBounds: 	(469@304) corner: (1159@548)
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (198691072) [other:  (announcer -> an Announcer)]
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		model: 	a FinderUI
		scrollBar: 	a ScrollBar(762102272)
		scroller: 	a MorphTreeTransformMorph(480013824)
		getMenuSelector: 	#menu:shifted:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(66194432)
		columns: 	an OrderedCollection(a MorphTreeColumn)
		potentialDropMorph: 	nil
		rowInset: 	2
		columnInset: 	0
		columnResizers: 	an OrderedCollection()
		withHLines: 	false
		preferedPaneColor: 	nil
		indentGap: 	20
		expandedToggleImage: 	an ImageMorph(137322496)
		notExpandedToggleImage: 	an ImageMorph(510430464)
		resizerWidth: 	0
		gapAfterToggle: 	5
		hasToggleAtRoot: 	nil
		topHeader: 	a Morph(1062828800)
		topHeaderBackground: 	Color transparent
		unboundLastColumn: 	true
		columnDropUnabled: 	nil
		columnColors: 	{Color transparent. Color transparent}
		rowColors: 	{(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.13000977517...etc...
		nodeList: 	an Array(Node(#acceptDroppingMorph:event:inMorph:) Node(#activate) No...etc...
		iconBlock: 	nil
		treeLineWidth: 	0
		lineColorBlock: 	nil
		treeLineDashes: 	nil
		listManager: 	a MorphTreeListManager
		mouseOverAllowed: 	false
		maxNodeWidth: 	292.0
		enabled: 	true


MouseButtonEvent>>sentTo:
	Receiver: [(502@425) mouseUp 5035776 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphTreeMorph(980742400
	Receiver's instance variables: 
		timeStamp: 	5035776
		source: 	a HandMorph(845628928)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(502@425)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


MorphTreeMorph(Morph)>>handleEvent:
	Receiver: a MorphTreeMorph(980742400)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil
	Receiver's instance variables: 
		bounds: 	(469.0@304.0) corner: (1159.0@548.0)
		owner: 	a StandardWindow(45959936) named: Finder
		submorphs: 	an Array(a ScrollBar(762102272) a Morph(1062828800) a MorphTreeTrans...etc...
		fullBounds: 	(469@304) corner: (1159@548)
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (198691072) [other:  (announcer -> an Announcer)]
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		model: 	a FinderUI
		scrollBar: 	a ScrollBar(762102272)
		scroller: 	a MorphTreeTransformMorph(480013824)
		getMenuSelector: 	#menu:shifted:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(66194432)
		columns: 	an OrderedCollection(a MorphTreeColumn)
		potentialDropMorph: 	nil
		rowInset: 	2
		columnInset: 	0
		columnResizers: 	an OrderedCollection()
		withHLines: 	false
		preferedPaneColor: 	nil
		indentGap: 	20
		expandedToggleImage: 	an ImageMorph(137322496)
		notExpandedToggleImage: 	an ImageMorph(510430464)
		resizerWidth: 	0
		gapAfterToggle: 	5
		hasToggleAtRoot: 	nil
		topHeader: 	a Morph(1062828800)
		topHeaderBackground: 	Color transparent
		unboundLastColumn: 	true
		columnDropUnabled: 	nil
		columnColors: 	{Color transparent. Color transparent}
		rowColors: 	{(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.13000977517...etc...
		nodeList: 	an Array(Node(#acceptDroppingMorph:event:inMorph:) Node(#activate) No...etc...
		iconBlock: 	nil
		treeLineWidth: 	0
		lineColorBlock: 	nil
		treeLineDashes: 	nil
		listManager: 	a MorphTreeListManager
		mouseOverAllowed: 	false
		maxNodeWidth: 	292.0
		enabled: 	true


MorphTreeMorph(Morph)>>handleFocusEvent:
	Receiver: a MorphTreeMorph(980742400)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil
	Receiver's instance variables: 
		bounds: 	(469.0@304.0) corner: (1159.0@548.0)
		owner: 	a StandardWindow(45959936) named: Finder
		submorphs: 	an Array(a ScrollBar(762102272) a Morph(1062828800) a MorphTreeTrans...etc...
		fullBounds: 	(469@304) corner: (1159@548)
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (198691072) [other:  (announcer -> an Announcer)]
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		model: 	a FinderUI
		scrollBar: 	a ScrollBar(762102272)
		scroller: 	a MorphTreeTransformMorph(480013824)
		getMenuSelector: 	#menu:shifted:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(66194432)
		columns: 	an OrderedCollection(a MorphTreeColumn)
		potentialDropMorph: 	nil
		rowInset: 	2
		columnInset: 	0
		columnResizers: 	an OrderedCollection()
		withHLines: 	false
		preferedPaneColor: 	nil
		indentGap: 	20
		expandedToggleImage: 	an ImageMorph(137322496)
		notExpandedToggleImage: 	an ImageMorph(510430464)
		resizerWidth: 	0
		gapAfterToggle: 	5
		hasToggleAtRoot: 	nil
		topHeader: 	a Morph(1062828800)
		topHeaderBackground: 	Color transparent
		unboundLastColumn: 	true
		columnDropUnabled: 	nil
		columnColors: 	{Color transparent. Color transparent}
		rowColors: 	{(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.13000977517...etc...
		nodeList: 	an Array(Node(#acceptDroppingMorph:event:inMorph:) Node(#activate) No...etc...
		iconBlock: 	nil
		treeLineWidth: 	0
		lineColorBlock: 	nil
		treeLineDashes: 	nil
		listManager: 	a MorphTreeListManager
		mouseOverAllowed: 	false
		maxNodeWidth: 	292.0
		enabled: 	true


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil]
		focusHolder: 	a MorphTreeMorph(980742400)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(431164160) [world]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc..
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	111
		numArgs: 	0


WorldMorph>>becomeActiveDuring:
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(431164160) [world]
		priorHand: 	a HandMorph(845628928)
		priorEvent: 	[(502@425) mouseOver red 5035680 nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a Standar...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(502@425) mouseUp 5035776 nil]
		focusHolder: 	a MorphTreeMorph(980742400)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil]
		focusHolder: 	a MorphTreeMorph(980742400)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil
	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil]
		evt: 	[(502@425) mouseUp 5035776 nil
	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


MouseClickState>>handleEvent:from:
	Receiver: a MouseClickState[#firstClickUp]
	Arguments and temporary variables: 
		evt: 	[(502@425) mouseUp 5035776 nil]
		aHand: 	a HandMorph(845628928)
		localEvt: 	[(502@425) mouseUp 5035776 nil]
		timedOut: 	false
		isDrag: 	fals
	Receiver's instance variables: 
		clickClient: 	a MorphTreeMorph(980742400)
		clickState: 	#firstClickUp
		firstClickDown: 	[(502@425) mouseDown red 5035680 nil]
		firstClickUp: 	[(502@425) mouseUp 5035776 nil]
		firstClickTime: 	5035680
		clickSelector: 	#click:
		dblClickSelector: 	#doubleClick:
		dblClickTime: 	350
		dblClickTimeoutSelector: 	nil
		dragSelector: 	nil
		dragThreshold: 	10
		localStamp: 	5035732


HandMorph>>handleEvent:
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 
		anEvent: 	[(502@425) mouseUp 5035776 nil]
		evt: 	[(502@425) mouseUp 5035776 nil
	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 
		anEventQueue: 	an InputEventSensor
		evt: 	[(502@425) mouseUp 5035776 nil]
		evtBuf: 	#(1 5035776 502 425 0 0 0 1)
		type: 	1
		hadAny: 	fals
	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEvents
	Receiver: a HandMorph(845628928)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(502@425) corner: (518@441)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(502@425) corner: (518@441)
		color: 	Color blue
		extension: 	a MorphExtension (1003523584)
		mouseFocus: 	nil
		keyboardFocus: 	a MorphTreeMorph(980742400)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(502@425) mouseUp 5035776 nil]
		targetOffset: 	(33.0@121.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5035776 502 425 0 0 0 1)
		lastKeyScanCode: 	31
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		h: 	a HandMorph(845628928
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(999145984) named: Pl...etc...
		lastStepTime: 	5035732
		lastStepMessage: 	nil
		lastCycleTime: 	5035776
		alarms: 	a Heap()
		lastAlarmTime: 	5035732
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(845628928))
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ]
		index: 	
	Receiver's instance variables: 
an Array(a HandMorph(845628928))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil 
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(999145984) named: Pl...etc...
		lastStepTime: 	5035732
		lastStepMessage: 	nil
		lastCycleTime: 	5035776
		alarms: 	a Heap()
		lastAlarmTime: 	5035732
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(999145984) named: Pl...etc...
		lastStepTime: 	5035732
		lastStepMessage: 	nil
		lastCycleTime: 	5035776
		alarms: 	a Heap()
		lastAlarmTime: 	5035732
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(999145984) named: Pl...etc...
		lastStepTime: 	5035732
		lastStepMessage: 	nil
		lastCycleTime: 	5035776
		alarms: 	a Heap()
		lastAlarmTime: 	5035732
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a Standar...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil



--- The full stack ---
ByteSymbol(Object)>>doesNotUnderstand: #definition
[ :stream | 
stream nextPutAll: aClass definition.
aClass hasComment
	ifTrue: [ stream
			cr;
			cr;
			cr;
			nextPutAll: aClass comment ] ] in FinderUI>>buildDescriptionOf:
String class(SequenceableCollection class)>>new:streamContents:
String class(SequenceableCollection class)>>streamContents:
FinderUI>>buildDescriptionOf:
FinderUI>>sourceCode
FinderUI>>updateSourceCode
WeakMessageSend>>value
Finder(Object)>>triggerEvent:
Finder>>selection:
FinderUI>>selection:
[ | selHolder |
selHolder := self newSelectionHolderWithNodePath: path.
self listModel selection: selHolder ] in MorphTreeListManager>>mouseUp:on:
BlockClosure>>ensure:
MorphTreeListManager>>selectionUpdateFromViewWhile:
MorphTreeListManager>>mouseUp:on:
MorphTreeMorph>>mouseUp:
MorphTreeMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
MorphTreeMorph(Morph)>>handleEvent:
MorphTreeMorph(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
MouseClickState>>handleEvent:from:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
DuplicatedSlotName: Slot #'e' appeared twice in ReversiCell
3 November 2019 6:35:10.078269 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSl...etc...
		other: 	#e => InstanceVariableSlot
		current: 	#e => InstanceVariableSlo
	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSlot #c => InstanceV...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new...etc...
		index: 	
	Receiver's instance variables: 
		array: 	{#a => InstanceVariableSlot. #b => InstanceVariableSlot. #c => InstanceV...etc...
		firstIndex: 	1
		lastIndex: 	8


FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSl...etc...
		current: 	#e => InstanceVariableSlo
	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


FixedLayout(PointerLayout)>>checkSanity
	Receiver: a FixedLayout
	Arguments and temporary variables: 

	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


ReversiCell class(ClassDescription)>>superclass:withLayoutType:slots:
	Receiver: ReversiCell
	Arguments and temporary variables: 
		aSuperclass: 	ReversiBoard
		layoutType: 	FixedLayout
		slotArray: 	{#e => InstanceVariableSlot. #ne => InstanceVariableSlot. #n => Inst...etc...
		superLayout: 	a FixedLayout
		newScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariableS...etc...
		newLayout: 	a FixedLayou
	Receiver's instance variables: 
		superclass: 	nil
		methodDict: 	nil
		format: 	nil
		layout: 	nil
		organization: 	nil
		subclasses: 	nil
		name: 	#ReversiCell
		classPool: 	nil
		sharedPools: 	nil
		environment: 	nil
		category: 	nil


ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
	Receiver: a ShDefaultBuilderEnhancer
	Arguments and temporary variables: 
		newClass: 	ReversiCell
		superclass: 	ReversiBoard
		layoutType: 	FixedLayout
		slots: 	{#e => InstanceVariableSlot. #ne => InstanceVariableSlot. #n => Instance...etc..
	Receiver's instance variables: 
a ShDefaultBuilderEnhancer

ShiftClassBuilder>>createClass
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#ReversiCell
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	ReversiBoard
		category: 	'Reversi'
		newMetaclass: 	ReversiCell class
		newClass: 	ReversiCell
		oldClass: 	ReversiCell
		oldMetaclass: 	ReversiCell class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShClassChanged a ShInstanceShapeChanged)
		metaSuperclass: 	nil
		superclassResolver: 	a ClassResolverStrictResolve


ShiftClassBuilder>>build
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#ReversiCell
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	ReversiBoard
		category: 	'Reversi'
		newMetaclass: 	ReversiCell class
		newClass: 	ReversiCell
		oldClass: 	ReversiCell
		oldMetaclass: 	ReversiCell class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShClassChanged a ShInstanceShapeChanged)
		metaSuperclass: 	nil
		superclassResolver: 	a ClassResolverStrictResolve


[ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder build.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
builder builderEnhancer migrateToClass: newClass installer: self.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


BlockClosure>>on:do:
	Receiver: [ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder bu...etc...
	Arguments and temporary variables: 
		exception: 	ShNoChangesInClass
		handlerAction: 	[ "If there are no changes in the building, I am not building or...etc..
	Receiver's instance variables: 
		outerContext: 	ShiftClassInstaller>>make
		startpc: 	188
		numArgs: 	0


ShiftClassInstaller>>make
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc..
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller class>>make:
	Receiver: ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc..
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#builder->ShiftClassInstaller>>#builder #comment...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ShiftAnonymousClassInstaller}
		name: 	#ShiftClassInstaller
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Shift-ClassInstaller-Base'


ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		t: 	#ReversiCell
		f: 	'e ne n nw w sw s se state'
		d: 	''
		s: 	''
		cat: 	'Reversi
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65544
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ReversiCell}
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aSubclassSymbol: 	#ReversiCell
		instVarNameList: 	'e ne n nw w sw s se state'
		classVarNames: 	''
		aPackageSymbol: 	'Reversi
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65544
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ReversiCell}
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard
		subclass: #ReversiCell
		instanceVariableNames: 'e ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'ReversiBoard subclass: #ReversiCell
	instanceVariableNames: ''e ne n ...etc...
		aController: 	a RubScrolledTextMorph(934802688)
		aClass: 	ReversiCell
		oldClass: 	ReversiCell
		class: 	nil
		newClassName: 	'ReversiCell'
		defTokens: 	an OrderedCollection('ReversiBoard' 'subclass:' '#ReversiCell' 'inst...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompile
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(794099712)
	Arguments and temporary variables: 
		aString: 	'ReversiBoard subclass: #ReversiCell
	instanceVariableNames: ''e ne n ...etc...
		aController: 	a RubScrolledTextMorph(934802688)
		aClass: 	ReversiCel
	Receiver's instance variables: 
		bounds: 	(394.0@215.0) corner: (1244.0@835.0)
		owner: 	a SystemWindow(856930560) named: ReversiCell
		submorphs: 	an Array(a ProportionalSplitterMorph(430805760) a PanelMorph(4562544...etc...
		fullBounds: 	(394@215) corner: (1244@835)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (274297088) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		navigationPanel: 	a PanelMorph(456254464)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(898142720) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(618257664)
		toolbar: 	a ClyToolbarMorph(21055232)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyInheritanceAnalysis...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(898142720)
		classView: 	a ClyQueryViewMorph(537808384)
		methodGroupView: 	a ClyQueryViewMorph(87489792)
		methodView: 	a ClyQueryViewMorph(891564288)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: ReversiCell


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


BlockClosure>>on:do:
	Receiver: [ self changesAreAboutApply.
applied := self applyChanges ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :err | 
textModel text: self editingText.
textMorph hasUnaccep...etc..
	Receiver's instance variables: 
		outerContext: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply...etc...
		startpc: 	140
		numArgs: 	0


[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


BlockClosure>>ensure:
	Receiver: [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyCh...etc...
	Arguments and temporary variables: 
		aBlock: 	[ applyingChanges := false ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>change...etc...
		startpc: 	130
		numArgs: 	0


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		aBlock: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
appl...etc..
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


MessageSend>>value
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 
		arg: 	a RubTextAccepte
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 
		arg1: 	a RubTextAccepted
		arg2: 	an Announce
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a ClyClassDefinitionEditorToolMorph(502993408)
		action: 	MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc..
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass 
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a ClyClassDefinitionEditorToolMorph(502993408)
		action: 	MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502...etc...


[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


BlockClosure>>ifCurtailed:
	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]
	Arguments and temporary variables: 
		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:
		startpc: 	82
		numArgs: 	0


SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:to:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		interestedSubscriptions: 	an Array(an AnnouncementSubscription)
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


Announcer>>announce:
	Receiver: an Announcer
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		announcement: 	a RubTextAccepte
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry



--- The full stack ---
[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
OrderedCollection>>do:
FixedLayout(PointerLayout)>>checkSlotNames
FixedLayout(PointerLayout)>>checkSanity
ReversiCell class(ClassDescription)>>superclass:withLayoutType:slots:
ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
ShiftClassBuilder>>createClass
ShiftClassBuilder>>build
[ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder build.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
builder builderEnhancer migrateToClass: newClass installer: self.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make
BlockClosure>>on:do:
ShiftClassInstaller>>make
ShiftClassInstaller>>make:
ShiftClassInstaller class>>make:
ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
ClyClassDefinitionEditorToolMorph>>applyChanges
[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
BlockClosure>>on:do:
[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
BlockClosure>>ensure:
ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
MessageSend>>value
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
RubScrolledTextMorph>>acceptContents
RubScrolledTextMorph>>whenTextAcceptRequest:
MessageSend>>value:
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubEditingArea(RubAbstractTextArea)>>announce:
RubEditingArea(RubAbstractTextArea)>>acceptContents
ClyTextEditor(RubTextEditor)>>accept
[ :target | target editor accept ] in RubTextEditor class>>buildShortcutsOn:
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryBinding>>completeMatch:buffer:
[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
Array(SequenceableCollection)>>do:
KMKeymap>>notifyCompleteMatchTo:buffer:
KMKeymap>>onMatchWith:notify:andDo:
[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andDo: aBlock ] in KMCategory>>onMatchWith:notify:andDo:
Set>>do:
KMCategory>>onMatchWith:notify:andDo:
KMCategoryBinding>>verifyMatchWith:notifying:thenDoing:
[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verifyMatchWith: anEventBuffer
	notifying: self
	thenDoing: [ ^ self ] ] in CmdKMDispatcher(KMDispatcher)>>dispatch:
OrderedCollection>>do:
CmdKMDispatcher(KMDispatcher)>>dispatch:
CmdKMDispatcher>>dispatch:
KMTarget>>dispatch:
[ :targetToDispatch | 
targetToDispatch dispatch: KMBuffer uniqueInstance buffer copy.
aKeyboardEvent wasHandled
	ifTrue: [ ^ self ] ] in KMDispatchChain>>dispatch:
KMDispatchChain>>do:
KMDispatchChain>>dispatch:
CmdKMDispatcher(KMDispatcher)>>dispatchKeystroke:
RubEditingArea(Morph)>>dispatchKeystrokeForEvent:
RubEditingArea(RubAbstractTextArea)>>handleKeystroke:
KeyboardEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
RubEditingArea(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
DuplicatedSlotName: Slot #'e' appeared twice in ReversiCell
3 November 2019 6:36:32.074885 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSl...etc...
		other: 	#e => InstanceVariableSlot
		current: 	#e => InstanceVariableSlo
	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSlot #c => InstanceV...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new...etc...
		index: 	
	Receiver's instance variables: 
		array: 	{#a => InstanceVariableSlot. #b => InstanceVariableSlot. #c => InstanceV...etc...
		firstIndex: 	1
		lastIndex: 	8


FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSl...etc...
		current: 	#e => InstanceVariableSlo
	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


FixedLayout(PointerLayout)>>checkSanity
	Receiver: a FixedLayout
	Arguments and temporary variables: 

	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


ReversiCell class(ClassDescription)>>superclass:withLayoutType:slots:
	Receiver: ReversiCell
	Arguments and temporary variables: 
		aSuperclass: 	ReversiBoard
		layoutType: 	FixedLayout
		slotArray: 	{#e => InstanceVariableSlot. #ne => InstanceVariableSlot. #n => Inst...etc...
		superLayout: 	a FixedLayout
		newScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariableS...etc...
		newLayout: 	a FixedLayou
	Receiver's instance variables: 
		superclass: 	nil
		methodDict: 	nil
		format: 	nil
		layout: 	nil
		organization: 	nil
		subclasses: 	nil
		name: 	#ReversiCell
		classPool: 	nil
		sharedPools: 	nil
		environment: 	nil
		category: 	nil


ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
	Receiver: a ShDefaultBuilderEnhancer
	Arguments and temporary variables: 
		newClass: 	ReversiCell
		superclass: 	ReversiBoard
		layoutType: 	FixedLayout
		slots: 	{#e => InstanceVariableSlot. #ne => InstanceVariableSlot. #n => Instance...etc..
	Receiver's instance variables: 
a ShDefaultBuilderEnhancer

ShiftClassBuilder>>createClass
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#ReversiCell
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	ReversiBoard
		category: 	'Reversi'
		newMetaclass: 	ReversiCell class
		newClass: 	ReversiCell
		oldClass: 	ReversiCell
		oldMetaclass: 	ReversiCell class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShClassChanged a ShInstanceShapeChanged)
		metaSuperclass: 	nil
		superclassResolver: 	a ClassResolverStrictResolve


ShiftClassBuilder>>build
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#ReversiCell
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	ReversiBoard
		category: 	'Reversi'
		newMetaclass: 	ReversiCell class
		newClass: 	ReversiCell
		oldClass: 	ReversiCell
		oldMetaclass: 	ReversiCell class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShClassChanged a ShInstanceShapeChanged)
		metaSuperclass: 	nil
		superclassResolver: 	a ClassResolverStrictResolve


[ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder build.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
builder builderEnhancer migrateToClass: newClass installer: self.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


BlockClosure>>on:do:
	Receiver: [ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder bu...etc...
	Arguments and temporary variables: 
		exception: 	ShNoChangesInClass
		handlerAction: 	[ "If there are no changes in the building, I am not building or...etc..
	Receiver's instance variables: 
		outerContext: 	ShiftClassInstaller>>make
		startpc: 	188
		numArgs: 	0


ShiftClassInstaller>>make
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc..
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller class>>make:
	Receiver: ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc..
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#builder->ShiftClassInstaller>>#builder #comment...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ShiftAnonymousClassInstaller}
		name: 	#ShiftClassInstaller
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Shift-ClassInstaller-Base'


ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		t: 	#ReversiCell
		f: 	'e ne n nw w sw s se state'
		d: 	''
		s: 	''
		cat: 	'Reversi
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65544
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ReversiCell}
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aSubclassSymbol: 	#ReversiCell
		instVarNameList: 	'e ne n nw w sw s se state'
		classVarNames: 	''
		aPackageSymbol: 	'Reversi
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65544
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ReversiCell}
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard
		subclass: #ReversiCell
		instanceVariableNames: 'e ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'ReversiBoard subclass: #ReversiCell
	instanceVariableNames: ''e ne n ...etc...
		aController: 	a RubScrolledTextMorph(934802688)
		aClass: 	ReversiCell
		oldClass: 	ReversiCell
		class: 	nil
		newClassName: 	'ReversiCell'
		defTokens: 	an OrderedCollection('ReversiBoard' 'subclass:' '#ReversiCell' 'inst...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompile
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(794099712)
	Arguments and temporary variables: 
		aString: 	'ReversiBoard subclass: #ReversiCell
	instanceVariableNames: ''e ne n ...etc...
		aController: 	a RubScrolledTextMorph(934802688)
		aClass: 	ReversiCel
	Receiver's instance variables: 
		bounds: 	(394.0@215.0) corner: (1244.0@835.0)
		owner: 	a SystemWindow(856930560) named: ReversiCell
		submorphs: 	an Array(a ProportionalSplitterMorph(430805760) a PanelMorph(4562544...etc...
		fullBounds: 	(394@215) corner: (1244@835)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (274297088) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		navigationPanel: 	a PanelMorph(456254464)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(898142720) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(618257664)
		toolbar: 	a ClyToolbarMorph(21055232)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyInheritanceAnalysis...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(898142720)
		classView: 	a ClyQueryViewMorph(537808384)
		methodGroupView: 	a ClyQueryViewMorph(87489792)
		methodView: 	a ClyQueryViewMorph(891564288)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: ReversiCell


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


BlockClosure>>on:do:
	Receiver: [ self changesAreAboutApply.
applied := self applyChanges ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :err | 
textModel text: self editingText.
textMorph hasUnaccep...etc..
	Receiver's instance variables: 
		outerContext: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply...etc...
		startpc: 	140
		numArgs: 	0


[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


BlockClosure>>ensure:
	Receiver: [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyCh...etc...
	Arguments and temporary variables: 
		aBlock: 	[ applyingChanges := false ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>change...etc...
		startpc: 	130
		numArgs: 	0


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		aBlock: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
appl...etc..
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


MessageSend>>value
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 
		arg: 	a RubTextAccepte
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 
		arg1: 	a RubTextAccepted
		arg2: 	an Announce
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a ClyClassDefinitionEditorToolMorph(502993408)
		action: 	MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc..
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass 
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a ClyClassDefinitionEditorToolMorph(502993408)
		action: 	MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502...etc...


[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


BlockClosure>>ifCurtailed:
	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]
	Arguments and temporary variables: 
		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:
		startpc: 	82
		numArgs: 	0


SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:to:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		interestedSubscriptions: 	an Array(an AnnouncementSubscription)
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


Announcer>>announce:
	Receiver: an Announcer
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		announcement: 	a RubTextAccepte
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry



--- The full stack ---
[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
OrderedCollection>>do:
FixedLayout(PointerLayout)>>checkSlotNames
FixedLayout(PointerLayout)>>checkSanity
ReversiCell class(ClassDescription)>>superclass:withLayoutType:slots:
ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
ShiftClassBuilder>>createClass
ShiftClassBuilder>>build
[ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder build.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
builder builderEnhancer migrateToClass: newClass installer: self.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make
BlockClosure>>on:do:
ShiftClassInstaller>>make
ShiftClassInstaller>>make:
ShiftClassInstaller class>>make:
ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
ClyClassDefinitionEditorToolMorph>>applyChanges
[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
BlockClosure>>on:do:
[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
BlockClosure>>ensure:
ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
MessageSend>>value
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
RubScrolledTextMorph>>acceptContents
RubScrolledTextMorph>>whenTextAcceptRequest:
MessageSend>>value:
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubEditingArea(RubAbstractTextArea)>>announce:
RubEditingArea(RubAbstractTextArea)>>acceptContents
ClyTextEditor(RubTextEditor)>>accept
[ :target | target editor accept ] in RubTextEditor class>>buildShortcutsOn:
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryBinding>>completeMatch:buffer:
[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
Array(SequenceableCollection)>>do:
KMKeymap>>notifyCompleteMatchTo:buffer:
KMKeymap>>onMatchWith:notify:andDo:
[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andDo: aBlock ] in KMCategory>>onMatchWith:notify:andDo:
Set>>do:
KMCategory>>onMatchWith:notify:andDo:
KMCategoryBinding>>verifyMatchWith:notifying:thenDoing:
[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verifyMatchWith: anEventBuffer
	notifying: self
	thenDoing: [ ^ self ] ] in CmdKMDispatcher(KMDispatcher)>>dispatch:
OrderedCollection>>do:
CmdKMDispatcher(KMDispatcher)>>dispatch:
CmdKMDispatcher>>dispatch:
KMTarget>>dispatch:
[ :targetToDispatch | 
targetToDispatch dispatch: KMBuffer uniqueInstance buffer copy.
aKeyboardEvent wasHandled
	ifTrue: [ ^ self ] ] in KMDispatchChain>>dispatch:
KMDispatchChain>>do:
KMDispatchChain>>dispatch:
CmdKMDispatcher(KMDispatcher)>>dispatchKeystroke:
RubEditingArea(Morph)>>dispatchKeystrokeForEvent:
RubEditingArea(RubAbstractTextArea)>>handleKeystroke:
KeyboardEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
RubEditingArea(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
DuplicatedSlotName: Slot #'e' appeared twice in ReversiCell
3 November 2019 6:36:46.487028 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSl...etc...
		other: 	#e => InstanceVariableSlot
		current: 	#e => InstanceVariableSlo
	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSlot #c => InstanceV...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new...etc...
		index: 	
	Receiver's instance variables: 
		array: 	{#a => InstanceVariableSlot. #b => InstanceVariableSlot. #c => InstanceV...etc...
		firstIndex: 	1
		lastIndex: 	8


FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#a => InstanceVariableSlot #b => InstanceVariableSl...etc...
		current: 	#e => InstanceVariableSlo
	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


FixedLayout(PointerLayout)>>checkSanity
	Receiver: a FixedLayout
	Arguments and temporary variables: 

	Receiver's instance variables: 
		host: 	ReversiCell
		slotScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariable...etc...


ReversiCell class(ClassDescription)>>superclass:withLayoutType:slots:
	Receiver: ReversiCell
	Arguments and temporary variables: 
		aSuperclass: 	ReversiBoard
		layoutType: 	FixedLayout
		slotArray: 	{#e => InstanceVariableSlot. #ne => InstanceVariableSlot. #n => Inst...etc...
		superLayout: 	a FixedLayout
		newScope: 	a LayoutClassScope(#a => InstanceVariableSlot #b => InstanceVariableS...etc...
		newLayout: 	a FixedLayou
	Receiver's instance variables: 
		superclass: 	nil
		methodDict: 	nil
		format: 	nil
		layout: 	nil
		organization: 	nil
		subclasses: 	nil
		name: 	#ReversiCell
		classPool: 	nil
		sharedPools: 	nil
		environment: 	nil
		category: 	nil


ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
	Receiver: a ShDefaultBuilderEnhancer
	Arguments and temporary variables: 
		newClass: 	ReversiCell
		superclass: 	ReversiBoard
		layoutType: 	FixedLayout
		slots: 	{#e => InstanceVariableSlot. #ne => InstanceVariableSlot. #n => Instance...etc..
	Receiver's instance variables: 
a ShDefaultBuilderEnhancer

ShiftClassBuilder>>createClass
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#ReversiCell
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	ReversiBoard
		category: 	'Reversi'
		newMetaclass: 	ReversiCell class
		newClass: 	ReversiCell
		oldClass: 	ReversiCell
		oldMetaclass: 	ReversiCell class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShClassChanged a ShInstanceShapeChanged)
		metaSuperclass: 	nil
		superclassResolver: 	a ClassResolverStrictResolve


ShiftClassBuilder>>build
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#ReversiCell
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	ReversiBoard
		category: 	'Reversi'
		newMetaclass: 	ReversiCell class
		newClass: 	ReversiCell
		oldClass: 	ReversiCell
		oldMetaclass: 	ReversiCell class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShClassChanged a ShInstanceShapeChanged)
		metaSuperclass: 	nil
		superclassResolver: 	a ClassResolverStrictResolve


[ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder build.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
builder builderEnhancer migrateToClass: newClass installer: self.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


BlockClosure>>on:do:
	Receiver: [ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder bu...etc...
	Arguments and temporary variables: 
		exception: 	ShNoChangesInClass
		handlerAction: 	[ "If there are no changes in the building, I am not building or...etc..
	Receiver's instance variables: 
		outerContext: 	ShiftClassInstaller>>make
		startpc: 	188
		numArgs: 	0


ShiftClassInstaller>>make
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc..
	Receiver's instance variables: 
		oldClass: 	ReversiCell
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller class>>make:
	Receiver: ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc..
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#builder->ShiftClassInstaller>>#builder #comment...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ShiftAnonymousClassInstaller}
		name: 	#ShiftClassInstaller
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Shift-ClassInstaller-Base'


ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		t: 	#ReversiCell
		f: 	'e ne n nw w sw s se state'
		d: 	''
		s: 	''
		cat: 	'Reversi
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65544
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ReversiCell}
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aSubclassSymbol: 	#ReversiCell
		instVarNameList: 	'e ne n nw w sw s se state'
		classVarNames: 	''
		aPackageSymbol: 	'Reversi
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65544
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ReversiCell}
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard
		subclass: #ReversiCell
		instanceVariableNames: 'e ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'ReversiBoard subclass: #ReversiCell
	instanceVariableNames: ''e ne n ...etc...
		aController: 	a RubScrolledTextMorph(934802688)
		aClass: 	ReversiCell
		oldClass: 	ReversiCell
		class: 	nil
		newClassName: 	'ReversiCell'
		defTokens: 	an OrderedCollection('ReversiBoard' 'subclass:' '#ReversiCell' 'inst...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompile
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(794099712)
	Arguments and temporary variables: 
		aString: 	'ReversiBoard subclass: #ReversiCell
	instanceVariableNames: ''e ne n ...etc...
		aController: 	a RubScrolledTextMorph(934802688)
		aClass: 	ReversiCel
	Receiver's instance variables: 
		bounds: 	(394.0@215.0) corner: (1244.0@835.0)
		owner: 	a SystemWindow(856930560) named: ReversiCell
		submorphs: 	an Array(a ProportionalSplitterMorph(430805760) a PanelMorph(4562544...etc...
		fullBounds: 	(394@215) corner: (1244@835)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (274297088) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	Color veryDarkGray
		navigationPanel: 	a PanelMorph(456254464)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(898142720) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(618257664)
		toolbar: 	a ClyToolbarMorph(21055232)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyInheritanceAnalysis...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(898142720)
		classView: 	a ClyQueryViewMorph(537808384)
		methodGroupView: 	a ClyQueryViewMorph(87489792)
		methodView: 	a ClyQueryViewMorph(891564288)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: ReversiCell


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		newClass: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


BlockClosure>>on:do:
	Receiver: [ self changesAreAboutApply.
applied := self applyChanges ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :err | 
textModel text: self editingText.
textMorph hasUnaccep...etc..
	Receiver's instance variables: 
		outerContext: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply...etc...
		startpc: 	140
		numArgs: 	0


[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


BlockClosure>>ensure:
	Receiver: [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyCh...etc...
	Arguments and temporary variables: 
		aBlock: 	[ applyingChanges := false ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>change...etc...
		startpc: 	130
		numArgs: 	0


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		aBlock: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
appl...etc..
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(502993408)
	Arguments and temporary variables: 
		applied: 	ni
	Receiver's instance variables: 
		bounds: 	(396.0@551.0) corner: (1243.0@834.0)
		owner: 	a Morph(573068544)
		submorphs: 	an Array(a ProportionalSplitterMorph(1023112960) a ClyQueryViewMorph...etc...
		fullBounds: 	(396@551) corner: (1243@834)
		color: 	Color transparent
		extension: 	a MorphExtension (561982720) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(794099712)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(612911104)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(795640832)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(934802688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	ReversiCell


MessageSend>>value
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 
		arg: 	a RubTextAccepte
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502993408))
	Arguments and temporary variables: 
		arg1: 	a RubTextAccepted
		arg2: 	an Announce
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(502993408)
		selector: 	#changesAccepted
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a ClyClassDefinitionEditorToolMorph(502993408)
		action: 	MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc..
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass 
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	83
		numArgs: 	0


AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a ClyClassDefinitionEditorToolMorph(502993408)
		action: 	MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(502...etc...


[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


BlockClosure>>ifCurtailed:
	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]
	Arguments and temporary variables: 
		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:
		startpc: 	82
		numArgs: 	0


SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:to:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		interestedSubscriptions: 	an Array(an AnnouncementSubscription)
		anAnnouncement: 	a RubTextAccepte
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


Announcer>>announce:
	Receiver: an Announcer
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		announcement: 	a RubTextAccepte
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry



--- The full stack ---
[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
OrderedCollection>>do:
FixedLayout(PointerLayout)>>checkSlotNames
FixedLayout(PointerLayout)>>checkSanity
ReversiCell class(ClassDescription)>>superclass:withLayoutType:slots:
ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
ShiftClassBuilder>>createClass
ShiftClassBuilder>>build
[ builder oldClass: oldClass.
self copyClassSlotsFromExistingClass.
newClass := builder build.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
builder builderEnhancer migrateToClass: newClass installer: self.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make
BlockClosure>>on:do:
ShiftClassInstaller>>make
ShiftClassInstaller>>make:
ShiftClassInstaller class>>make:
ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
ReversiBoard class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
ClyClassDefinitionEditorToolMorph>>applyChanges
[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
BlockClosure>>on:do:
[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
BlockClosure>>ensure:
ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
MessageSend>>value
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
RubScrolledTextMorph>>acceptContents
RubScrolledTextMorph>>whenTextAcceptRequest:
MessageSend>>value:
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubEditingArea(RubAbstractTextArea)>>announce:
RubEditingArea(RubAbstractTextArea)>>acceptContents
ClyTextEditor(RubTextEditor)>>accept
[ :target | target editor accept ] in RubTextEditor class>>buildShortcutsOn:
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryBinding>>completeMatch:buffer:
[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
Array(SequenceableCollection)>>do:
KMKeymap>>notifyCompleteMatchTo:buffer:
KMKeymap>>onMatchWith:notify:andDo:
[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andDo: aBlock ] in KMCategory>>onMatchWith:notify:andDo:
Set>>do:
KMCategory>>onMatchWith:notify:andDo:
KMCategoryBinding>>verifyMatchWith:notifying:thenDoing:
[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verifyMatchWith: anEventBuffer
	notifying: self
	thenDoing: [ ^ self ] ] in CmdKMDispatcher(KMDispatcher)>>dispatch:
OrderedCollection>>do:
CmdKMDispatcher(KMDispatcher)>>dispatch:
CmdKMDispatcher>>dispatch:
KMTarget>>dispatch:
[ :targetToDispatch | 
targetToDispatch dispatch: KMBuffer uniqueInstance buffer copy.
aKeyboardEvent wasHandled
	ifTrue: [ ^ self ] ] in KMDispatchChain>>dispatch:
KMDispatchChain>>do:
KMDispatchChain>>dispatch:
CmdKMDispatcher(KMDispatcher)>>dispatchKeystroke:
RubEditingArea(Morph)>>dispatchKeystrokeForEvent:
RubEditingArea(RubAbstractTextArea)>>handleKeystroke:
KeyboardEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
RubEditingArea(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Warning
3 November 2019 7:27:29.50019 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

SpListPresenter(Object)>>deprecated:on:in:
	Receiver: a SpListPresenter
	Arguments and temporary variables: 
		anExplanationString: 	'Use #contextMenu: instead. The old way to create a MenuPr...etc...
		date: 	'2019-03-07'
		version: 	#Pharo
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	an EyeInspector
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	a KMCategory
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'List' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		borderWidth: 	a SpValueHolder[ 0 ]
		borderColor: 	a SpValueHolder[ Color transparent ]
		dragEnabled: 	a SpValueHolder[ false ]
		dropEnabled: 	a SpValueHolder[ false ]
		dragTransformationBlock: 	a SpValueHolder[ [ :w | w update: #borderWidth: with: ...etc...
		wantDropBlock: 	a SpValueHolder[ [ :int | self withWidgetDo: [ :w | w update: #b...etc...
		acceptDropBlock: 	a SpValueHolder[ [ :w | w update: #borderColor: with: {newColo...etc...
		transferBlock: 	a SpValueHolder[ self ]
		color: 	a SpValueHolder[ (Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0...etc...
		help: 	a SpValueHolder[ nil ]
		enabled: 	a SpValueHolder[ true ]
		styles: 	#()
		selectionMode: 	a SpSingleSelectionMode
		activationBlock: 	[ self diveIntoSelectedObject ]
		activateOnSingleClick: 	false
		model: 	a SpCollectionListModel
		itemFilter: 	a SpValueHolder[ nil ]
		verticalAlignment: 	a SpVerticalAlignment
		wrapScrollBars: 	true
		contextMenu: 	a SpValueHolder[ nil ]
		allowToSelect: 	a SpValueHolder[ true ]
		autoDeselect: 	a SpValueHolder[ true ]
		headerTitle: 	a SpValueHolder[ nil ]
		display: 	a SpValueHolder[ [ :eyeElement | self labelFor: eyeElement ] ]
		icon: 	a SpValueHolder[ nil ]


SpListPresenter(SpAbstractListPresenter)>>menu:
	Receiver: a SpListPresenter
	Arguments and temporary variables: 
		aBlock: 	[ :aMenu | self inspectionMenu: aMenu 
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	an EyeInspector
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	a KMCategory
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'List' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		borderWidth: 	a SpValueHolder[ 0 ]
		borderColor: 	a SpValueHolder[ Color transparent ]
		dragEnabled: 	a SpValueHolder[ false ]
		dropEnabled: 	a SpValueHolder[ false ]
		dragTransformationBlock: 	a SpValueHolder[ [ :w | w update: #borderWidth: with: ...etc...
		wantDropBlock: 	a SpValueHolder[ [ :int | self withWidgetDo: [ :w | w update: #b...etc...
		acceptDropBlock: 	a SpValueHolder[ [ :w | w update: #borderColor: with: {newColo...etc...
		transferBlock: 	a SpValueHolder[ self ]
		color: 	a SpValueHolder[ (Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0...etc...
		help: 	a SpValueHolder[ nil ]
		enabled: 	a SpValueHolder[ true ]
		styles: 	#()
		selectionMode: 	a SpSingleSelectionMode
		activationBlock: 	[ self diveIntoSelectedObject ]
		activateOnSingleClick: 	false
		model: 	a SpCollectionListModel
		itemFilter: 	a SpValueHolder[ nil ]
		verticalAlignment: 	a SpVerticalAlignment
		wrapScrollBars: 	true
		contextMenu: 	a SpValueHolder[ nil ]
		allowToSelect: 	a SpValueHolder[ true ]
		autoDeselect: 	a SpValueHolder[ true ]
		headerTitle: 	a SpValueHolder[ nil ]
		display: 	a SpValueHolder[ [ :eyeElement | self labelFor: eyeElement ] ]
		icon: 	a SpValueHolder[ nil ]


EyeInspector>>updateList
	Receiver: an EyeInspector
	Arguments and temporary variables: 
		elements: 	an OrderedCollection('self'->Array #superclass->ArrayedCollection #me...etc..
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	nil
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	nil
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'Untitled window' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		object: 	a SpValueHolder[ Array ]
		customMenuActions: 	nil
		text: 	a SpCodePresenter
		list: 	a SpListPresenter
		description: 	a SpTextPresenter


EyeInspector>>objectChanged
	Receiver: an EyeInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	nil
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	nil
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'Untitled window' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		object: 	a SpValueHolder[ Array ]
		customMenuActions: 	nil
		text: 	a SpCodePresenter
		list: 	a SpListPresenter
		description: 	a SpTextPresenter


[ self objectChanged ] in EyeInspector(EyeAbstractInspector)>>initializePresenter
	Receiver: an EyeInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	nil
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	nil
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'Untitled window' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		object: 	a SpValueHolder[ Array ]
		customMenuActions: 	nil
		text: 	a SpCodePresenter
		list: 	a SpListPresenter
		description: 	a SpTextPresenter


BlockClosure>>cull:
	Receiver: [ self objectChanged ]
	Arguments and temporary variables: 
		anArg: 	Arra
	Receiver's instance variables: 
		outerContext: 	EyeInspector(EyeAbstractInspector)>>initializePresenter
		startpc: 	95
		numArgs: 	0


BlockClosure>>cull:cull:
	Receiver: [ self objectChanged ]
	Arguments and temporary variables: 
		firstArg: 	Array
		secondArg: 	ni
	Receiver's instance variables: 
		outerContext: 	EyeInspector(EyeAbstractInspector)>>initializePresenter
		startpc: 	95
		numArgs: 	0


[ :block | block cull: self value cull: oldValue ] in SpValueHolder>>valueChanged:
	Receiver: a SpValueHolder[ Array ]
	Arguments and temporary variables: 
		oldValue: 	nil
		block: 	[ self objectChanged 
	Receiver's instance variables: 
		subscriptions: 	an OrderedCollection([ self objectChanged ])
		lock: 	true
		value: 	Array


OrderedCollection>>do:
	Receiver: an OrderedCollection([ self objectChanged ])
	Arguments and temporary variables: 
		aBlock: 	[ :block | block cull: self value cull: oldValue ]
		index: 	
	Receiver's instance variables: 
		array: 	an Array([ self objectChanged ] nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


SpValueHolder>>valueChanged:
	Receiver: a SpValueHolder[ Array ]
	Arguments and temporary variables: 
		oldValue: 	ni
	Receiver's instance variables: 
		subscriptions: 	an OrderedCollection([ self objectChanged ])
		lock: 	true
		value: 	Array


[ | oldValue |
oldValue := value.
value := anObject.
self valueChanged: oldValue ] in SpValueHolder>>value:
	Receiver: a SpValueHolder[ Array ]
	Arguments and temporary variables: 
		anObject: 	Array
		oldValue: 	ni
	Receiver's instance variables: 
		subscriptions: 	an OrderedCollection([ self objectChanged ])
		lock: 	true
		value: 	Array


BlockClosure>>ensure:
	Receiver: [ | oldValue |
oldValue := value.
value := anObject.
self valueChanged: oldValue ]
	Arguments and temporary variables: 
		aBlock: 	[ lock := false ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	SpValueHolder>>value:
		startpc: 	59
		numArgs: 	0


SpValueHolder>>value:
	Receiver: a SpValueHolder[ Array ]
	Arguments and temporary variables: 
		anObject: 	Arra
	Receiver's instance variables: 
		subscriptions: 	an OrderedCollection([ self objectChanged ])
		lock: 	true
		value: 	Array


SpObservableSlot>>write:to:
	Receiver: #object => SpObservableSlot
	Arguments and temporary variables: 
		aValue: 	Array
		anObject: 	an EyeInspector
		v: 	a SpValueHolder[ Array 
	Receiver's instance variables: 
		name: 	#object
		owningClass: 	EyeAbstractInspector
		definingClass: 	nil
		index: 	17


EyeInspector(Object)>>writeSlot:value:
	Receiver: an EyeInspector
	Arguments and temporary variables: 
		aSlot: 	#object => SpObservableSlot
		anObject: 	Arra
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	nil
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	nil
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'Untitled window' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		object: 	a SpValueHolder[ Array ]
		customMenuActions: 	nil
		text: 	a SpCodePresenter
		list: 	a SpListPresenter
		description: 	a SpTextPresenter


EyeInspector(EyeAbstractInspector)>>object:
	Receiver: an EyeInspector
	Arguments and temporary variables: 
		anObject: 	Arra
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	nil
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	nil
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'Untitled window' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		object: 	a SpValueHolder[ Array ]
		customMenuActions: 	nil
		text: 	a SpCodePresenter
		list: 	a SpListPresenter
		description: 	a SpTextPresenter


EyeInspector>>inspect:
	Receiver: an EyeInspector
	Arguments and temporary variables: 
		anObject: 	Arra
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	an Announcer
		owner: 	nil
		adapter: 	nil
		needRebuild: 	a SpValueHolder[ true ]
		application: 	nil
		focusOrder: 	nil
		contextKeyBindings: 	nil
		windowIcon: 	a SpValueHolder[ nil ]
		aboutText: 	a SpValueHolder[ nil ]
		askOkToClose: 	a SpValueHolder[ false ]
		titleHolder: 	a SpValueHolder[ 'Untitled window' ]
		additionalSubpresentersMap: 	nil
		layout: 	nil
		visible: 	a SpValueHolder[ true ]
		extent: 	a SpValueHolder[ nil ]
		object: 	a SpValueHolder[ Array ]
		customMenuActions: 	nil
		text: 	a SpCodePresenter
		list: 	a SpListPresenter
		description: 	a SpTextPresenter


EyeInspector class>>inspector:
	Receiver: EyeInspector
	Arguments and temporary variables: 
		anObject: 	Arra
	Receiver's instance variables: 
		superclass: 	EyeAbstractInspector
		methodDict: 	a MethodDictionary(#addAllInstVars:->EyeInspector>>#addAllInstVars:...etc...
		format: 	65557
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{EyeBasicInspector. EyeCharacterInspector. EyeCollectionInspector. ...etc...
		name: 	#EyeInspector
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Spec2-Inspector-Base'


EyeInspector class>>inspect:
	Receiver: EyeInspector
	Arguments and temporary variables: 
		anObject: 	Arra
	Receiver's instance variables: 
		superclass: 	EyeAbstractInspector
		methodDict: 	a MethodDictionary(#addAllInstVars:->EyeInspector>>#addAllInstVars:...etc...
		format: 	65557
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{EyeBasicInspector. EyeCharacterInspector. EyeCollectionInspector. ...etc...
		name: 	#EyeInspector
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Spec2-Inspector-Base'


Array class(Object)>>basicInspect
	Receiver: Array
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#'+*'->Array>>#'+*' #asArray->Array>>#asArray #a...etc...
		format: 	131072
		layout: 	a VariableLayout
		organization: 	a ClassOrganization
		subclasses: 	{WeakArray. MetacelloMethodSectionPath. WeakActionSequence. Cubic}
		name: 	#Array
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Base'


[ :result | result basicInspect ] in ClyTextEditor(RubSmalltalkEditor)>>basicInspectIt
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		result: 	Arra
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(966115584)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


ClyTextEditor(RubSmalltalkEditor)>>evaluate:andDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result basicInspect ]
		result: 	Array
		rcvr: 	ReversiCell
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(966115584)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


ClyTextEditor(RubSmalltalkEditor)>>evaluateSelectionAndDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result basicInspect 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(966115584)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


ClyTextEditor(RubSmalltalkEditor)>>basicInspectIt
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(966115584)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy
		completionEngine: 	a CompletionEngine


RubEditingArea(Object)>>perform:orSendTo:
	Receiver: a RubEditingArea(966115584)
	Arguments and temporary variables: 
		selector: 	#basicInspectIt
		otherTarget: 	a ClyTextEdito
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (828@69)
		owner: 	a TransformWithLayoutMorph(383177728)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1068578304) a RubCursor(92763980...etc...
		fullBounds: 	(0@0) corner: (828@69)
		color: 	Color transparent
		extension: 	a MorphExtension (681593600) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a RubScrolledTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a ClyTextEditor
		scrollPane: 	a RubTextScrollPane(842389504)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a ClyTextEditingMode
		cursor: 	a RubCursor(927639808)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(966115584)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	ClyTextEditor


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ] ].
self showShortcut.
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(445367808)'Basic Inspect it'
	Arguments and temporary variables: 
		evt: 	[(928@710) mouseUp 10754114 nil]
		w: 	a WorldMorph(431164160) [world]
		selArgCount: 	
	Receiver's instance variables: 
		bounds: 	(903.0@702.0) corner: (1091.0@720.0)
		owner: 	a MenuMorph(1023315712)
		submorphs: 	#()
		fullBounds: 	(903.0@702.0) corner: (1091.0@720.0)
		color: 	Color white
		extension: 	a MorphExtension (869890304)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(966115584)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a ClyTextEditor)
		icon: 	Form(16x16x32)
		keyText: 	'I'
		getStateSelector: 	nil
		enablementSelector: 	nil


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	230
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc..
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(445367808)'Basic Inspect it'
	Arguments and temporary variables: 
		evt: 	[(928@710) mouseUp 10754114 nil]
		w: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		bounds: 	(903.0@702.0) corner: (1091.0@720.0)
		owner: 	a MenuMorph(1023315712)
		submorphs: 	#()
		fullBounds: 	(903.0@702.0) corner: (1091.0@720.0)
		color: 	Color white
		extension: 	a MorphExtension (869890304)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(966115584)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a ClyTextEditor)
		icon: 	Form(16x16x32)
		keyText: 	'I'
		getStateSelector: 	nil
		enablementSelector: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(445367808)'Basic Inspect it'
	Arguments and temporary variables: 
		evt: 	[(928@710) mouseUp 10754114 nil
	Receiver's instance variables: 
		bounds: 	(903.0@702.0) corner: (1091.0@720.0)
		owner: 	a MenuMorph(1023315712)
		submorphs: 	#()
		fullBounds: 	(903.0@702.0) corner: (1091.0@720.0)
		color: 	Color white
		extension: 	a MorphExtension (869890304)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(966115584)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a ClyTextEditor)
		icon: 	Form(16x16x32)
		keyText: 	'I'
		getStateSelector: 	nil
		enablementSelector: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(445367808)'Basic Inspect it'
	Arguments and temporary variables: 
		anEvent: 	[(928@710) mouseUp 10754114 nil
	Receiver's instance variables: 
		bounds: 	(903.0@702.0) corner: (1091.0@720.0)
		owner: 	a MenuMorph(1023315712)
		submorphs: 	#()
		fullBounds: 	(903.0@702.0) corner: (1091.0@720.0)
		color: 	Color white
		extension: 	a MorphExtension (869890304)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(966115584)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a ClyTextEditor)
		icon: 	Form(16x16x32)
		keyText: 	'I'
		getStateSelector: 	nil
		enablementSelector: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(928@710) mouseUp 10754114 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it
	Receiver's instance variables: 
		timeStamp: 	10754114
		source: 	a HandMorph(845628928)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(928@710)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(445367808)'Basic Inspect it'
	Arguments and temporary variables: 
		anEvent: 	[(928@710) mouseUp 10754114 nil
	Receiver's instance variables: 
		bounds: 	(903.0@702.0) corner: (1091.0@720.0)
		owner: 	a MenuMorph(1023315712)
		submorphs: 	#()
		fullBounds: 	(903.0@702.0) corner: (1091.0@720.0)
		color: 	Color white
		extension: 	a MorphExtension (869890304)
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubEditingArea(966115584)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a ClyTextEditor)
		icon: 	Form(16x16x32)
		keyText: 	'I'
		getStateSelector: 	nil
		enablementSelector: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(928@710) mouseUp 10754114 nil]
		aMorph: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	tru
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(928@710) mouseUp 10754114 nil
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it'


MouseButtonEvent>>sentTo:
	Receiver: [(928@710) mouseUp 10754114 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	10754114
		source: 	a HandMorph(845628928)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(928@710)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(928@710) mouseUp 10754114 nil]
		aMorph: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(928@710) mouseUp 10754114 nil]
		aMorph: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(445367808)'Basic Inspect it'



--- The full stack ---
SpListPresenter(Object)>>deprecated:on:in:
SpListPresenter(SpAbstractListPresenter)>>menu:
EyeInspector>>updateList
EyeInspector>>objectChanged
[ self objectChanged ] in EyeInspector(EyeAbstractInspector)>>initializePresenter
BlockClosure>>cull:
BlockClosure>>cull:cull:
[ :block | block cull: self value cull: oldValue ] in SpValueHolder>>valueChanged:
OrderedCollection>>do:
SpValueHolder>>valueChanged:
[ | oldValue |
oldValue := value.
value := anObject.
self valueChanged: oldValue ] in SpValueHolder>>value:
BlockClosure>>ensure:
SpValueHolder>>value:
SpObservableSlot>>write:to:
EyeInspector(Object)>>writeSlot:value:
EyeInspector(EyeAbstractInspector)>>object:
EyeInspector>>inspect:
EyeInspector class>>inspector:
EyeInspector class>>inspect:
Array class(Object)>>basicInspect
[ :result | result basicInspect ] in ClyTextEditor(RubSmalltalkEditor)>>basicInspectIt
ClyTextEditor(RubSmalltalkEditor)>>evaluate:andDo:
ClyTextEditor(RubSmalltalkEditor)>>evaluateSelectionAndDo:
ClyTextEditor(RubSmalltalkEditor)>>basicInspectIt
RubEditingArea(Object)>>perform:orSendTo:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ] ].
self showShortcut.
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ClyMethodCreationToolMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
Morph>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
Morph>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TabManagerMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
PanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ClyFullBrowser(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
SystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Array2D class did not understand #atAllPut:
3 November 2019 7:41:49.965634 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Array2D class(Object)>>doesNotUnderstand: #atAllPut:
	Receiver: Array2D
	Arguments and temporary variables: 
		aMessage: 	atAllPut: 5
		exception: 	MessageNotUnderstood: Array2D class>>atAllPut:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Collection
		methodDict: 	a MethodDictionary(#'+*'->Array2D>>#'+*' #,->Array2D>>#, #',,'->Arr...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{Matrix}
		name: 	#Array2D
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Ordered'


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ Array2D
		new: 8;
		atAllPut: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(892027648)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(892027648)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(113042432)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(892027648)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(727753216)
		submorphs: 	an Array(a RubPrimarySelectionMorph(469087232) a RubCursor(989566976...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (742376704) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1023469568)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(989566976)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(249302784))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(113042432)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(37849088) named: Ins...etc...
		lastStepTime: 	11614561
		lastStepMessage: 	nil
		lastCycleTime: 	11614609
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11614561
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(37849088) named: Ins...etc...
		lastStepTime: 	11614561
		lastStepMessage: 	nil
		lastCycleTime: 	11614609
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11614561
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(37849088) named: Ins...etc...
		lastStepTime: 	11614561
		lastStepMessage: 	nil
		lastCycleTime: 	11614609
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11614561
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Array2D class(Object)>>doesNotUnderstand: #atAllPut:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Array2D class did not understand #atAllPut:
3 November 2019 7:42:28.906976 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Array2D class(Object)>>doesNotUnderstand: #atAllPut:
	Receiver: Array2D
	Arguments and temporary variables: 
		aMessage: 	atAllPut: 5
		exception: 	MessageNotUnderstood: Array2D class>>atAllPut:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Collection
		methodDict: 	a MethodDictionary(#'+*'->Array2D>>#'+*' #,->Array2D>>#, #',,'->Arr...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{Matrix}
		name: 	#Array2D
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Ordered'


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ Array2D
		new: 8;
		atAllPut: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(892027648)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(892027648)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(113042432)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(892027648)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(727753216)
		submorphs: 	an Array(a RubPrimarySelectionMorph(469087232) a RubCursor(989566976...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (742376704) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1023469568)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(989566976)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(584760064))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(113042432)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(37849088) named: Ins...etc...
		lastStepTime: 	11653497
		lastStepMessage: 	nil
		lastCycleTime: 	11653550
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11653497
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(37849088) named: Ins...etc...
		lastStepTime: 	11653497
		lastStepMessage: 	nil
		lastCycleTime: 	11653550
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11653497
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(37849088) named: Ins...etc...
		lastStepTime: 	11653497
		lastStepMessage: 	nil
		lastCycleTime: 	11653550
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11653497
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Array2D class(Object)>>doesNotUnderstand: #atAllPut:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Array2D did not understand #at
3 November 2019 7:45:41.752388 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Array2D(Object)>>doesNotUnderstand: #at
	Receiver: (nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil
nil nil nil nil nil nil n...etc...
	Arguments and temporary variables: 
		aMessage: 	at
		exception: 	MessageNotUnderstood: Array2D>>at
		resumeValue: 	ni
	Receiver's instance variables: 
		contents: 	#(nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		array: 	(nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil
nil nil...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| array |
	array := Array2D new: 8.
	array atAllPut: _.
	^ array at
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(892027648)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(892027648)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(113042432)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(892027648)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (363@107)
		owner: 	a TransformWithLayoutMorph(727753216)
		submorphs: 	an Array(a RubPrimarySelectionMorph(105224192) a RubCursor(989566976...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (742376704) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1023469568)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(989566976)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(497446400))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(113042432)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(829541632) named: Pl...etc...
		lastStepTime: 	11846335
		lastStepMessage: 	nil
		lastCycleTime: 	11846397
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11846335
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(829541632) named: Pl...etc...
		lastStepTime: 	11846335
		lastStepMessage: 	nil
		lastCycleTime: 	11846397
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11846335
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(845628928))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(829541632) named: Pl...etc...
		lastStepTime: 	11846335
		lastStepMessage: 	nil
		lastCycleTime: 	11846397
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(989566976)))
		lastAlarmTime: 	11846335
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(845628928)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(9758976) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (634497280) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Array2D(Object)>>doesNotUnderstand: #at
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #ifTrue:
3 November 2019 8:13:04.520979 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #ifTrue:
	Receiver: $W
	Arguments and temporary variables: 
		aMessage: 	ifTrue: true
		exception: 	MessageNotUnderstood: Character>>ifTrue:
		resumeValue: 	ni
	Receiver's instance variables: 
$W

ReversiCell>>DoItIn:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		arg1: 	ReversiCell>>placePiece
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


Character(Object)>>mustBeBooleanDeOptimizeIn:
	Receiver: $W
	Arguments and temporary variables: 
		context: 	ReversiCell>>placePiece:
		ret: 	nil
		cache: 	an IdentityDictionary(84->ReversiCell>>#DoItIn: )
		method: 	ReversiCell>>#DoItIn
	Receiver's instance variables: 
$W

Character(Object)>>mustBeBoolean
	Receiver: $W
	Arguments and temporary variables: 

	Receiver's instance variables: 
$W

ReversiCell>>placePiece:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		pieceType: 	$
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells |
	cells := Array2D new: 8.
	cells atAllPut: ReversiCell new...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (285@107)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(604133632) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(216068096))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1286985
		lastStepMessage: 	nil
		lastCycleTime: 	1287019
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1286985
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1286985
		lastStepMessage: 	nil
		lastCycleTime: 	1287019
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1286985
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1286985
		lastStepMessage: 	nil
		lastCycleTime: 	1287019
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1286985
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #ifTrue:
ReversiCell>>DoItIn:
Character(Object)>>mustBeBooleanDeOptimizeIn:
Character(Object)>>mustBeBoolean
ReversiCell>>placePiece:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #ifTrue:
3 November 2019 8:14:53.179406 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #ifTrue:
	Receiver: $W
	Arguments and temporary variables: 
		aMessage: 	ifTrue: true
		exception: 	MessageNotUnderstood: Character>>ifTrue:
		resumeValue: 	ni
	Receiver's instance variables: 
$W

ReversiCell>>DoItIn:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		arg1: 	ReversiCell>>placePiece
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


Character(Object)>>mustBeBooleanDeOptimizeIn:
	Receiver: $W
	Arguments and temporary variables: 
		context: 	ReversiCell>>placePiece:
		ret: 	nil
		cache: 	an IdentityDictionary(84->ReversiCell>>#DoItIn: )
		method: 	ReversiCell>>#DoItIn
	Receiver's instance variables: 
$W

Character(Object)>>mustBeBoolean
	Receiver: $W
	Arguments and temporary variables: 

	Receiver's instance variables: 
$W

ReversiCell>>placePiece:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		pieceType: 	$
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells |
	cells := Array2D new: 8.
	cells atAllPut: ReversiCell new...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (285@107)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(604133632) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(838159616))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(149.0@181.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1395658
		lastStepMessage: 	nil
		lastCycleTime: 	1395694
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1395658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1395658
		lastStepMessage: 	nil
		lastCycleTime: 	1395694
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1395658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1395658
		lastStepMessage: 	nil
		lastCycleTime: 	1395694
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1395658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #ifTrue:
ReversiCell>>DoItIn:
Character(Object)>>mustBeBooleanDeOptimizeIn:
Character(Object)>>mustBeBoolean
ReversiCell>>placePiece:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #ifTrue:
3 November 2019 8:15:44.466562 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #ifTrue:
	Receiver: $W
	Arguments and temporary variables: 
		aMessage: 	ifTrue: arg1 tempNamed: 'pieceType'
		exception: 	MessageNotUnderstood: Character>>ifTrue:
		resumeValue: 	ni
	Receiver's instance variables: 
$W

ReversiCell>>DoItIn:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		arg1: 	ReversiCell>>placePiece
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


Character(Object)>>mustBeBooleanDeOptimizeIn:
	Receiver: $W
	Arguments and temporary variables: 
		context: 	ReversiCell>>placePiece:
		ret: 	nil
		cache: 	an IdentityDictionary(82->ReversiCell>>#DoItIn: )
		method: 	ReversiCell>>#DoItIn
	Receiver's instance variables: 
$W

Character(Object)>>mustBeBoolean
	Receiver: $W
	Arguments and temporary variables: 

	Receiver's instance variables: 
$W

ReversiCell>>placePiece:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		pieceType: 	$
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells |
	cells := Array2D new: 8.
	cells atAllPut: ReversiCell new...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (285@107)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(604133632) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(294226176))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(149.0@181.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 2 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1446954
		lastStepMessage: 	nil
		lastCycleTime: 	1446983
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1446954
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1446954
		lastStepMessage: 	nil
		lastCycleTime: 	1446983
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1446954
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1446954
		lastStepMessage: 	nil
		lastCycleTime: 	1446983
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1446954
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #ifTrue:
ReversiCell>>DoItIn:
Character(Object)>>mustBeBooleanDeOptimizeIn:
Character(Object)>>mustBeBoolean
ReversiCell>>placePiece:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #ifTrue:
3 November 2019 8:16:19.472753 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #ifTrue:
	Receiver: $W
	Arguments and temporary variables: 
		aMessage: 	ifTrue: arg1 tempNamed: 'pieceType'
		exception: 	MessageNotUnderstood: Character>>ifTrue:
		resumeValue: 	ni
	Receiver's instance variables: 
$W

ReversiCell>>DoItIn:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		arg1: 	ReversiCell>>placePiece
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


Character(Object)>>mustBeBooleanDeOptimizeIn:
	Receiver: $W
	Arguments and temporary variables: 
		context: 	ReversiCell>>placePiece:
		ret: 	nil
		cache: 	an IdentityDictionary(82->ReversiCell>>#DoItIn: )
		method: 	ReversiCell>>#DoItIn
	Receiver's instance variables: 
$W

Character(Object)>>mustBeBoolean
	Receiver: $W
	Arguments and temporary variables: 

	Receiver's instance variables: 
$W

ReversiCell>>placePiece:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		pieceType: 	$
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells |
	cells := Array2D new: 8.
	cells atAllPut: ReversiCell new...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (285@107)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(604133632) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(32546560))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(215.0@135.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1481970
		lastStepMessage: 	nil
		lastCycleTime: 	1481996
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1481970
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1481970
		lastStepMessage: 	nil
		lastCycleTime: 	1481996
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1481970
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1481970
		lastStepMessage: 	nil
		lastCycleTime: 	1481996
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1481970
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #ifTrue:
ReversiCell>>DoItIn:
Character(Object)>>mustBeBooleanDeOptimizeIn:
Character(Object)>>mustBeBoolean
ReversiCell>>placePiece:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #ifTrue:
3 November 2019 8:19:29.41787 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #ifTrue:
	Receiver: $W
	Arguments and temporary variables: 
		aMessage: 	ifTrue: arg1 tempNamed: 'pieceType'
		exception: 	MessageNotUnderstood: Character>>ifTrue:
		resumeValue: 	ni
	Receiver's instance variables: 
$W

ReversiCell>>DoItIn:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		arg1: 	ReversiCell>>placePiece
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


Character(Object)>>mustBeBooleanDeOptimizeIn:
	Receiver: $W
	Arguments and temporary variables: 
		context: 	ReversiCell>>placePiece:
		ret: 	nil
		cache: 	an IdentityDictionary(62->ReversiCell>>#DoItIn: )
		method: 	ReversiCell>>#DoItIn
	Receiver's instance variables: 
$W

Character(Object)>>mustBeBoolean
	Receiver: $W
	Arguments and temporary variables: 

	Receiver's instance variables: 
$W

ReversiCell>>placePiece:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		pieceType: 	$
	Receiver's instance variables: 
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		state: 	$_


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells |
	cells := Array2D new: 8.
	cells atAllPut: ReversiCell new...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (285@107)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(604133632) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(442050304))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(156.0@143.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1671889
		lastStepMessage: 	nil
		lastCycleTime: 	1671938
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1671889
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1671889
		lastStepMessage: 	nil
		lastCycleTime: 	1671938
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1671889
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	1671889
		lastStepMessage: 	nil
		lastCycleTime: 	1671938
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	1671889
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #ifTrue:
ReversiCell>>DoItIn:
Character(Object)>>mustBeBooleanDeOptimizeIn:
Character(Object)>>mustBeBoolean
ReversiCell>>placePiece:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiBoard class did not understand #boardAsString
3 November 2019 8:43:40.648801 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiBoard class(Object)>>doesNotUnderstand: #boardAsString
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aMessage: 	boardAsString
		exception: 	MessageNotUnderstood: ReversiBoard class>>boardAsString
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#boardAsString->ReversiBoard>>#boardAsString #in...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	ReversiBoar
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard.
	^ board boardAsString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (747@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(794066688) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(345728256))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3123149
		lastStepMessage: 	nil
		lastCycleTime: 	3123174
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3123149
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3123149
		lastStepMessage: 	nil
		lastCycleTime: 	3123174
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3123149
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3123149
		lastStepMessage: 	nil
		lastCycleTime: 	3123174
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3123149
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiBoard class(Object)>>doesNotUnderstand: #boardAsString
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiBoard class did not understand #boardAsString
3 November 2019 8:44:55.121896 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiBoard class(Object)>>doesNotUnderstand: #boardAsString
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aMessage: 	boardAsString
		exception: 	MessageNotUnderstood: ReversiBoard class>>boardAsString
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#boardAsString->ReversiBoard>>#boardAsString #in...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	ReversiBoar
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard.
	^ board boardAsString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (747@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(794066688) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(626739456))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(372.0@339.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3197614
		lastStepMessage: 	nil
		lastCycleTime: 	3197646
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3197614
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3197614
		lastStepMessage: 	nil
		lastCycleTime: 	3197646
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3197614
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3197614
		lastStepMessage: 	nil
		lastCycleTime: 	3197646
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3197614
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiBoard class(Object)>>doesNotUnderstand: #boardAsString
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#board is missing, and does not understand #boardAsString
3 November 2019 8:48:44.844493 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject>>doesNotUnderstand: #boardAsString
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	boardAsString
		exception: 	VariableNotDeclared: receiver of "boardAsString" is nil
		resumeValue: 	nil
		node: 	RBVariableNode(board
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ board boardAsString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(128082688))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(909541888))(a FadingMorp...etc...
		lastStepTime: 	3427291
		lastStepMessage: 	nil
		lastCycleTime: 	3427327
		alarms: 	a Heap()
		lastAlarmTime: 	3427291
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a Fadin...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(909541888))(a FadingMorp...etc...
		lastStepTime: 	3427291
		lastStepMessage: 	nil
		lastCycleTime: 	3427327
		alarms: 	a Heap()
		lastAlarmTime: 	3427291
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(909541888))(a FadingMorp...etc...
		lastStepTime: 	3427291
		lastStepMessage: 	nil
		lastCycleTime: 	3427327
		alarms: 	a Heap()
		lastAlarmTime: 	3427291
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		currentHand: 	a HandMorph(196406272
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(909541888))(a FadingMorp...etc...
		lastStepTime: 	3427291
		lastStepMessage: 	nil
		lastCycleTime: 	3427327
		alarms: 	a Heap()
		lastAlarmTime: 	3427291
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a Fadin...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(885182208)
	Arguments and temporary variables: 
		aPoint: 	(153@158.0)
		aWorld: 	a WorldMorph(431164160) [world]
		aBoolean: 	true
		w: 	a WorldMorph(431164160) [world]
		originalFocusHolder: 	a RubEditingArea(303833344
	Receiver's instance variables: 
		bounds: 	(151.0@150.0) corner: (347.0@384.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(16361472)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(151.0@150.0) corner: (347.0@384.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (375773952) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(113386496)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(885182208)
	Arguments and temporary variables: 
		allowKeyboardControl: 	tru
	Receiver's instance variables: 
		bounds: 	(151.0@150.0) corner: (347.0@384.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(16361472)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(151.0@150.0) corner: (347.0@384.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (375773952) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(113386496)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(885182208)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(151.0@150.0) corner: (347.0@384.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(16361472)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(151.0@150.0) corner: (347.0@384.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (375773952) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(113386496)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(885182208
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(128082688))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		evt: 	[(134@53) mouseDown yellow 3426439 nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(128082688))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		anEvent: 	[(134@53) mouseDown yellow 3426439 nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(128082688))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(134@53) mouseDown yellow 3426439 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(303833344
	Receiver's instance variables: 
		timeStamp: 	3426439
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(134@53)
		handler: 	a RubEditingArea(303833344)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		anEvent: 	[(134@53) mouseDown yellow 3426439 nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(128082688))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(134@53) mouseDown yellow 3426439 nil]
		aMorph: 	a RubEditingArea(303833344)
		globalPt: 	(134@53)
		localEvt: 	[(134@53) mouseDown yellow 3426439 nil]
		index: 	3
		child: 	a RubCursor(243908608)
		morphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608))
		handler: 	a RubEditingArea(303833344)
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(662402304
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(134@53) mouseDown yellow 3426439 nil
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(134@53) mouseDown yellow 3426439 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	3426439
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(134@53)
		handler: 	a RubEditingArea(303833344)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(134@53) mouseDown yellow 3426439 nil]
		aMorph: 	a RubEditingArea(303833344
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(134@53) mouseDown yellow 3426439 nil]
		aMorph: 	a RubEditingArea(303833344
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		anEvent: 	[(134@53) mouseDown yellow 3426439 nil]
		defaultDispatcher: 	a MorphicEventDispatche
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(128082688))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(153@158) mouseDown yellow 3426439 nil]
		aMorph: 	a TransformWithLayoutMorph(887059456)
		globalPt: 	(153@158)
		localEvt: 	[(134@53) mouseDown yellow 3426439 nil]
		index: 	1
		child: 	a RubEditingArea(303833344)
		morphs: 	an Array(a RubEditingArea(303833344))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(662402304
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(153@158) mouseDown yellow 3426439 nil
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(153@158) mouseDown yellow 3426439 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	3426439
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(153@158)
		handler: 	a RubScrolledTextMorph(662402304)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(153@158) mouseDown yellow 3426439 nil]
		aMorph: 	a TransformWithLayoutMorph(887059456
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(153@158) mouseDown yellow 3426439 nil]
		aMorph: 	a TransformWithLayoutMorph(887059456
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(887059456)
	Arguments and temporary variables: 
		anEvent: 	[(153@158) mouseDown yellow 3426439 nil]
		defaultDispatcher: 	a MorphicEventDispatche
	Receiver's instance variables: 
		bounds: 	(19@105) corner: (810@764)
		owner: 	a RubTextScrollPane(980826112)
		submorphs: 	an Array(a RubEditingArea(303833344))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1697536) [other:  (kmDispatcher -> a KMDispatcher)...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-19@ -105))
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(153@158) mouseDown yellow 3426439 nil]
		aMorph: 	a RubTextScrollPane(980826112)
		globalPt: 	(153@158)
		localEvt: 	[(153@158) mouseDown yellow 3426439 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(887059456)
		morphs: 	an Array(a TransformWithLayoutMorph(887059456))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(662402304
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(153@158) mouseDown yellow 3426439 nil
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(153@158) mouseDown yellow 3426439 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	3426439
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(153@158)
		handler: 	a RubScrolledTextMorph(662402304)
		wasHandled: 	false
		whichButton: 	2



--- The full stack ---
UndefinedObject>>doesNotUnderstand: #boardAsString
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#board is missing, and does not understand #boardAsString
3 November 2019 8:48:50.907193 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject>>doesNotUnderstand: #boardAsString
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	boardAsString
		exception: 	VariableNotDeclared: receiver of "boardAsString" is nil
		resumeValue: 	nil
		node: 	RBVariableNode(board
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ board boardAsString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | t selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(35218944))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(295466752))(a FadingMorp...etc...
		lastStepTime: 	3433364
		lastStepMessage: 	nil
		lastCycleTime: 	3433425
		alarms: 	a Heap()
		lastAlarmTime: 	3433364
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a Fadin...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(295466752))(a FadingMorp...etc...
		lastStepTime: 	3433364
		lastStepMessage: 	nil
		lastCycleTime: 	3433425
		alarms: 	a Heap()
		lastAlarmTime: 	3433364
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(295466752))(a FadingMorp...etc...
		lastStepTime: 	3433364
		lastStepMessage: 	nil
		lastCycleTime: 	3433425
		alarms: 	a Heap()
		lastAlarmTime: 	3433364
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		currentHand: 	a HandMorph(196406272
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(295466752))(a FadingMorp...etc...
		lastStepTime: 	3433364
		lastStepMessage: 	nil
		lastCycleTime: 	3433425
		alarms: 	a Heap()
		lastAlarmTime: 	3433364
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a Fadin...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(204129536)
	Arguments and temporary variables: 
		aPoint: 	(209@180.0)
		aWorld: 	a WorldMorph(431164160) [world]
		aBoolean: 	true
		w: 	a WorldMorph(431164160) [world]
		originalFocusHolder: 	a RubEditingArea(303833344
	Receiver's instance variables: 
		bounds: 	(207.0@172.0) corner: (403.0@406.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(744718592)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(207.0@172.0) corner: (403.0@406.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (931540224) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(744718592)'Do it and go'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(204129536)
	Arguments and temporary variables: 
		allowKeyboardControl: 	tru
	Receiver's instance variables: 
		bounds: 	(207.0@172.0) corner: (403.0@406.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(744718592)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(207.0@172.0) corner: (403.0@406.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (931540224) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(744718592)'Do it and go'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(204129536)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(207.0@172.0) corner: (403.0@406.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(744718592)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(207.0@172.0) corner: (403.0@406.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (931540224) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(744718592)'Do it and go'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(204129536
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(35218944))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		evt: 	[(190@75) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(16074752) a RubCursor(243908608)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(35218944))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubTextScrollPane>>mouseDown:
	Receiver: a RubTextScrollPane(980826112)
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		bounds: 	(19.0@105.0) corner: (810.0@764.0)
		owner: 	a RubScrolledTextMorph(662402304)
		submorphs: 	an Array(a TransformWithLayoutMorph(887059456))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (662133504) [other:  (announcer -> an Announcer) (k...etc...
		scroller: 	a TransformWithLayoutMorph(887059456)
		hScrollbar: 	a RubScrollBar(221571328)
		vScrollbar: 	a RubScrollBar(215084032)
		drawFocusBorder: 	true


RubScrolledTextMorph>>mouseDown:
	Receiver: a RubScrolledTextMorph(662402304)
	Arguments and temporary variables: 
		event: 	[(209@180) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		bounds: 	(19.0@105.0) corner: (810.0@764.0)
		owner: 	a GLMPanelMorph(621634304)
		submorphs: 	an Array(a RubTextScrollPane(980826112) a RubAdornmentDisplayer(1008...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (720151808) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	false
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(980826112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(1008811776))
		enabled: 	true
		highlights: 	an OrderedCollection()
		getBackgroundColorSelector: 	nil
		askBeforeDiscardingEdits: 	true


RubScrolledTextMorph(Morph)>>handleMouseDown:
	Receiver: a RubScrolledTextMorph(662402304)
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		bounds: 	(19.0@105.0) corner: (810.0@764.0)
		owner: 	a GLMPanelMorph(621634304)
		submorphs: 	an Array(a RubTextScrollPane(980826112) a RubAdornmentDisplayer(1008...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (720151808) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	false
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(980826112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(1008811776))
		enabled: 	true
		highlights: 	an OrderedCollection()
		getBackgroundColorSelector: 	nil
		askBeforeDiscardingEdits: 	true


RubScrolledTextMorph>>handleMouseDown:
	Receiver: a RubScrolledTextMorph(662402304)
	Arguments and temporary variables: 
		event: 	[(209@180) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		bounds: 	(19.0@105.0) corner: (810.0@764.0)
		owner: 	a GLMPanelMorph(621634304)
		submorphs: 	an Array(a RubTextScrollPane(980826112) a RubAdornmentDisplayer(1008...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (720151808) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	false
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(980826112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(1008811776))
		enabled: 	true
		highlights: 	an OrderedCollection()
		getBackgroundColorSelector: 	nil
		askBeforeDiscardingEdits: 	true


MouseButtonEvent>>sentTo:
	Receiver: [(209@180) mouseDown yellow 3432175 nil]
	Arguments and temporary variables: 
		anObject: 	a RubScrolledTextMorph(662402304
	Receiver's instance variables: 
		timeStamp: 	3432175
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(209@180)
		handler: 	a RubScrolledTextMorph(662402304)
		wasHandled: 	true
		whichButton: 	2


RubScrolledTextMorph(Morph)>>handleEvent:
	Receiver: a RubScrolledTextMorph(662402304)
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		bounds: 	(19.0@105.0) corner: (810.0@764.0)
		owner: 	a GLMPanelMorph(621634304)
		submorphs: 	an Array(a RubTextScrollPane(980826112) a RubAdornmentDisplayer(1008...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (720151808) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	false
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(980826112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(1008811776))
		enabled: 	true
		highlights: 	an OrderedCollection()
		getBackgroundColorSelector: 	nil
		askBeforeDiscardingEdits: 	true


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		aMorph: 	a RubScrolledTextMorph(662402304)
		globalPt: 	(209@180)
		localEvt: 	[(209@180) mouseDown yellow 3432175 nil]
		index: 	3
		child: 	a RubTextScrollPane(980826112)
		morphs: 	an Array(a RubTextScrollPane(980826112) a RubAdornmentDisplayer(1008811...etc...
		handler: 	a RubScrolledTextMorph(662402304)
		inside: 	false
		lastHandler: 	a GLMSystemWindow(374829568) named: Playgroun
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(209@180) mouseDown yellow 3432175 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	3432175
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(209@180)
		handler: 	a RubScrolledTextMorph(662402304)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		aMorph: 	a RubScrolledTextMorph(662402304
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		aMorph: 	a RubScrolledTextMorph(662402304
	Receiver's instance variables: 
		morph: 	nil


RubScrolledTextMorph(Morph)>>processEvent:using:
	Receiver: a RubScrolledTextMorph(662402304)
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		defaultDispatcher: 	a MorphicEventDispatche
	Receiver's instance variables: 
		bounds: 	(19.0@105.0) corner: (810.0@764.0)
		owner: 	a GLMPanelMorph(621634304)
		submorphs: 	an Array(a RubTextScrollPane(980826112) a RubAdornmentDisplayer(1008...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.1300097751710655 g: 0.1300097751710655 b: 0.1300097751710655...etc...
		extension: 	a MorphExtension (720151808) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	false
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(980826112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(1008811776))
		enabled: 	true
		highlights: 	an OrderedCollection()
		getBackgroundColorSelector: 	nil
		askBeforeDiscardingEdits: 	true


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		aMorph: 	a GLMPanelMorph(621634304)
		globalPt: 	(209@180)
		localEvt: 	[(209@180) mouseDown yellow 3432175 nil]
		index: 	1
		child: 	a RubScrolledTextMorph(662402304)
		morphs: 	an Array(a RubScrolledTextMorph(662402304))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a GLMSystemWindow(374829568) named: Playgroun
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(209@180) mouseDown yellow 3432175 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatche
	Receiver's instance variables: 
		timeStamp: 	3432175
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(209@180)
		handler: 	a GLMSystemWindow(374829568) named: Playground
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		aMorph: 	a GLMPanelMorph(621634304
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	48
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		aMorph: 	a GLMPanelMorph(621634304
	Receiver's instance variables: 
		morph: 	nil


GLMPanelMorph(Morph)>>processEvent:using:
	Receiver: a GLMPanelMorph(621634304)
	Arguments and temporary variables: 
		anEvent: 	[(209@180) mouseDown yellow 3432175 nil]
		defaultDispatcher: 	a MorphicEventDispatche
	Receiver's instance variables: 
		bounds: 	(14.0@100.0) corner: (815.0@769.0)
		owner: 	a LazyTabGroupMorph(937388032)
		submorphs: 	an Array(a RubScrolledTextMorph(662402304))
		fullBounds: 	nil
		color: 	Color darkGray
		extension: 	a MorphExtension (752341248) [sticky]  [other:  (roundedCorners -> #...etc...
		borderWidth: 	1
		borderColor: 	#tabbed



--- The full stack ---
UndefinedObject>>doesNotUnderstand: #boardAsString
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubTextScrollPane>>mouseDown:
RubScrolledTextMorph>>mouseDown:
RubScrolledTextMorph(Morph)>>handleMouseDown:
RubScrolledTextMorph>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubScrolledTextMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiBoard class did not understand #boardAsString
3 November 2019 8:50:18.532219 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiBoard class(Object)>>doesNotUnderstand: #boardAsString
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aMessage: 	boardAsString
		exception: 	MessageNotUnderstood: ReversiBoard class>>boardAsString
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#boardAsString->ReversiBoard>>#boardAsString #in...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard
		new;
		boardAsString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@31)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(655516160) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673020416))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3520998
		lastStepMessage: 	nil
		lastCycleTime: 	3521058
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3520998
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3520998
		lastStepMessage: 	nil
		lastCycleTime: 	3521058
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3520998
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	3520998
		lastStepMessage: 	nil
		lastCycleTime: 	3521058
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	3520998
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiBoard class(Object)>>doesNotUnderstand: #boardAsString
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
3 November 2019 9:08:18.125697 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ByteString(Object)>>error:
	Receiver: '  1 2 3 4 5 6 7 8
                                                                       ...etc...
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object
	Receiver's instance variables: 
'  1 2 3 4 5 6 7 8
                                                                       ...etc...

ByteString(Object)>>errorImproperStore
	Receiver: '  1 2 3 4 5 6 7 8
                                                                       ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
'  1 2 3 4 5 6 7 8
                                                                       ...etc...

ByteString>>at:put:
	Receiver: '  1 2 3 4 5 6 7 8
                                                                       ...etc...
	Arguments and temporary variables: 
		index: 	19
		aCharacter: 	6
	Receiver's instance variables: 
'  1 2 3 4 5 6 7 8
                                                                       ...etc...

WriteStream>>nextPut:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	6
	Receiver's instance variables: 
		collection: 	'  1 2 3 4 5 6 7 8
                                                ...etc...
		position: 	19
		readLimit: 	0
		writeLimit: 	100


[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: 8 do: [ :x | 
	stream
		nextPut: x + 64;
		space.
	1 to: 8 do: [ :y | 
		stream
			space;
			nextPut: (cells at: x at: y) state ].
	stream cr ] ] in ReversiBoard>>boardAsString
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		stream: 	a WriteStream
		x: 	
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


String class(SequenceableCollection class)>>new:streamContents:
	Receiver: String
	Arguments and temporary variables: 
		newSize: 	100
		blockWithArg: 	[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: ...etc...
		stream: 	a WriteStrea
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


String class(SequenceableCollection class)>>streamContents:
	Receiver: String
	Arguments and temporary variables: 
		blockWithArg: 	[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: ...etc..
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


ReversiBoard>>boardAsString
	Receiver: a ReversiBoard
	Arguments and temporary variables: 

	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ Transcript show: ReversiBoard new boardAsString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@31)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(582124288) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(903569920))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	4600575
		lastStepMessage: 	nil
		lastCycleTime: 	4600643
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	4600575
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	4600575
		lastStepMessage: 	nil
		lastCycleTime: 	4600643
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	4600575
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	4600575
		lastStepMessage: 	nil
		lastCycleTime: 	4600643
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	4600575
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>error:
ByteString(Object)>>errorImproperStore
ByteString>>at:put:
WriteStream>>nextPut:
[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: 8 do: [ :x | 
	stream
		nextPut: x + 64;
		space.
	1 to: 8 do: [ :y | 
		stream
			space;
			nextPut: (cells at: x at: y) state ].
	stream cr ] ] in ReversiBoard>>boardAsString
String class(SequenceableCollection class)>>new:streamContents:
String class(SequenceableCollection class)>>streamContents:
ReversiBoard>>boardAsString
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #utf8Decoded
3 November 2019 9:09:36.84561 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

SmallInteger(Object)>>doesNotUnderstand: #utf8Decoded
	Receiver: 65
	Arguments and temporary variables: 
		aMessage: 	utf8Decoded
		exception: 	MessageNotUnderstood: SmallInteger>>utf8Decoded
		resumeValue: 	ni
	Receiver's instance variables: 
65

[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: 8 do: [ :x | 
	stream
		nextPut: (x + 64) utf8Decoded;
		space.
	1 to: 8 do: [ :y | 
		stream
			space;
			nextPut: (cells at: x at: y) state ].
	stream cr ] ] in ReversiBoard>>boardAsString
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		stream: 	a WriteStream
		x: 	
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


String class(SequenceableCollection class)>>new:streamContents:
	Receiver: String
	Arguments and temporary variables: 
		newSize: 	100
		blockWithArg: 	[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: ...etc...
		stream: 	a WriteStrea
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


String class(SequenceableCollection class)>>streamContents:
	Receiver: String
	Arguments and temporary variables: 
		blockWithArg: 	[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: ...etc..
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


ReversiBoard>>boardAsString
	Receiver: a ReversiBoard
	Arguments and temporary variables: 

	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ Transcript show: ReversiBoard new boardAsString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@31)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(582124288) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(791731200))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(169.0@191.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(341541376) named: In...etc...
		lastStepTime: 	4679317
		lastStepMessage: 	nil
		lastCycleTime: 	4679367
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	4679317
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(341541376) named: In...etc...
		lastStepTime: 	4679317
		lastStepMessage: 	nil
		lastCycleTime: 	4679367
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	4679317
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(341541376) named: In...etc...
		lastStepTime: 	4679317
		lastStepMessage: 	nil
		lastCycleTime: 	4679367
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	4679317
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #utf8Decoded
[ :stream | 
stream
	nextPutAll: '  1 2 3 4 5 6 7 8';
	cr.
1 to: 8 do: [ :x | 
	stream
		nextPut: (x + 64) utf8Decoded;
		space.
	1 to: 8 do: [ :y | 
		stream
			space;
			nextPut: (cells at: x at: y) state ].
	stream cr ] ] in ReversiBoard>>boardAsString
String class(SequenceableCollection class)>>new:streamContents:
String class(SequenceableCollection class)>>streamContents:
ReversiBoard>>boardAsString
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: 1st subscript out of range
3 November 2019 9:19:16.924919 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Array2D(Object)>>error:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		aString: 	'1st subscript out of range
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


Array2D>>indexForRow:andColumn:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		row: 	0
		column: 	
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


Array2D>>at:at:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		rowNumber: 	0
		columnNumber: 	
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells	DoIt
	| cells |
	cells := Array2D new: 8.
	1 to: 8 |
	cells ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@126)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(420040192) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(840789504))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(228.0@197.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(341541376) named: In...etc...
		lastStepTime: 	5259401
		lastStepMessage: 	nil
		lastCycleTime: 	5259442
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5259401
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(341541376) named: In...etc...
		lastStepTime: 	5259401
		lastStepMessage: 	nil
		lastCycleTime: 	5259442
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5259401
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(341541376) named: In...etc...
		lastStepTime: 	5259401
		lastStepMessage: 	nil
		lastCycleTime: 	5259442
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5259401
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Array2D(Object)>>error:
Array2D>>indexForRow:andColumn:
Array2D>>at:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: 2nd subscript out of range
3 November 2019 9:19:37.934878 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Array2D(Object)>>error:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		aString: 	'2nd subscript out of range
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


Array2D>>indexForRow:andColumn:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		row: 	1
		column: 	
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


Array2D>>at:at:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		rowNumber: 	1
		columnNumber: 	
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells	DoIt
	| cells |
	cells := Array2D new: 8.
	1 to: 8 |
	cells ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@126)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(255126784) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(467175424))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(200.0@157.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	5280423
		lastStepMessage: 	nil
		lastCycleTime: 	5280457
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5280423
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	5280423
		lastStepMessage: 	nil
		lastCycleTime: 	5280457
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5280423
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	5280423
		lastStepMessage: 	nil
		lastCycleTime: 	5280457
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5280423
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Array2D(Object)>>error:
Array2D>>indexForRow:andColumn:
Array2D>>at:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: 2nd subscript out of range
3 November 2019 9:20:09.747916 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Array2D(Object)>>error:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		aString: 	'2nd subscript out of range
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


Array2D>>indexForRow:andColumn:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		row: 	1
		column: 	
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


Array2D>>at:at:
	Receiver: (a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Rev...etc...
	Arguments and temporary variables: 
		rowNumber: 	1
		columnNumber: 	
	Receiver's instance variables: 
		contents: 	an Array(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a Re...etc...
		numberOfColumns: 	8
		numberOfRows: 	8


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc..
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| cells	DoIt
	| cells |
	cells := Array2D new: 8.
	1 to: 8 |
	cells ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@126)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(604180992) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(97536512))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	5312231
		lastStepMessage: 	nil
		lastCycleTime: 	5312271
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5312231
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	5312231
		lastStepMessage: 	nil
		lastCycleTime: 	5312271
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5312231
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	5312231
		lastStepMessage: 	nil
		lastCycleTime: 	5312271
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	5312231
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Array2D(Object)>>error:
Array2D>>indexForRow:andColumn:
Array2D>>at:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiBoard class did not understand #findCellNeighbors:at:
3 November 2019 10:11:35.934128 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiBoard class(Object)>>doesNotUnderstand: #findCellNeighbors:at:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aMessage: 	findCellNeighbors: 5 at: 5
		exception: 	MessageNotUnderstood: ReversiBoard class>>findCellNeighbors:at:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#boardAsString->ReversiBoard>>#boardAsString #fi...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(631198976) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1068130304))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(466093056) named: In...etc...
		lastStepTime: 	8398426
		lastStepMessage: 	nil
		lastCycleTime: 	8398458
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	8398426
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(466093056) named: In...etc...
		lastStepTime: 	8398426
		lastStepMessage: 	nil
		lastCycleTime: 	8398458
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	8398426
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(466093056) named: In...etc...
		lastStepTime: 	8398426
		lastStepMessage: 	nil
		lastCycleTime: 	8398458
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	8398426
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiBoard class(Object)>>doesNotUnderstand: #findCellNeighbors:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiBoard class did not understand #findCellNeighbors:at:
3 November 2019 10:15:50.621772 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiBoard class(Object)>>doesNotUnderstand: #findCellNeighbors:at:
	Receiver: ReversiBoard
	Arguments and temporary variables: 
		aMessage: 	findCellNeighbors: 5 at: 5
		exception: 	MessageNotUnderstood: ReversiBoard class>>findCellNeighbors:at:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#boardAsString->ReversiBoard>>#boardAsString #fi...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(303833344)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(303833344)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (791@69)
		owner: 	a TransformWithLayoutMorph(887059456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(631198976) a RubCursor(243908608...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (373685248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(980826112)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(243908608)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(863726848))
		getMenuPolicy: 	a RubEditingArea(303833344)
		mouseDownPoint: 	(387.0@246.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(662402304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	8653111
		lastStepMessage: 	nil
		lastCycleTime: 	8653148
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	8653111
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	8653111
		lastStepMessage: 	nil
		lastCycleTime: 	8653148
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	8653111
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(374829568) named: Pl...etc...
		lastStepTime: 	8653111
		lastStepMessage: 	nil
		lastCycleTime: 	8653148
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(243908608)))
		lastAlarmTime: 	8653111
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiBoard class(Object)>>doesNotUnderstand: #findCellNeighbors:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#'[' was sent to nil
3 November 2019 10:18:05.195787 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #'['
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	[
		exception: 	MessageNotUnderstood: receiver of "[" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #'['
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	[
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

ByteSymbol(Symbol)>>value:
	Receiver: #'['
	Arguments and temporary variables: 
		anObject: 	ni
	Receiver's instance variables: 
#'['

ReversiBoard>>findCellNeighbors:at:
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		rowNumber: 	5
		columnNumber: 	5
		row: 	5
		col: 	5
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		operations: 	#(#'[' #col #':' #= #col #+ 1 #']' #'[' #row #':' #= #row #- 1 #']'...etc...
		direction: 	
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard new findCellNeighbors: 5 at: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1039@31)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(179291136) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(763170560))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	8787658
		lastStepMessage: 	nil
		lastCycleTime: 	8787720
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	8787658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	8787658
		lastStepMessage: 	nil
		lastCycleTime: 	8787720
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	8787658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	8787658
		lastStepMessage: 	nil
		lastCycleTime: 	8787720
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	8787658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #'['
UndefinedObject>>doesNotUnderstand: #'['
ByteSymbol(Symbol)>>value:
ReversiBoard>>findCellNeighbors:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of Array class are not indexable
3 November 2019 10:25:47.933709 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Array class(Object)>>error:
	Receiver: Array
	Arguments and temporary variables: 
		aString: 	'Instances of Array class are not indexable
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#'+*'->Array>>#'+*' #asArray->Array>>#asArray #a...etc...
		format: 	131072
		layout: 	a VariableLayout
		organization: 	a ClassOrganization
		subclasses: 	{WeakArray. MetacelloMethodSectionPath. WeakActionSequence. Cubic}
		name: 	#Array
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Base'


Array class(Object)>>errorNotIndexable
	Receiver: Array
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#'+*'->Array>>#'+*' #asArray->Array>>#asArray #a...etc...
		format: 	131072
		layout: 	a VariableLayout
		organization: 	a ClassOrganization
		subclasses: 	{WeakArray. MetacelloMethodSectionPath. WeakActionSequence. Cubic}
		name: 	#Array
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Base'


Array class(Object)>>at:put:
	Receiver: Array
	Arguments and temporary variables: 
		index: 	1
		value: 	[ col := col + 1 
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#'+*'->Array>>#'+*' #asArray->Array>>#asArray #a...etc...
		format: 	131072
		layout: 	a VariableLayout
		organization: 	a ClassOrganization
		subclasses: 	{WeakArray. MetacelloMethodSectionPath. WeakActionSequence. Cubic}
		name: 	#Array
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Base'


ReversiBoard>>findCellNeighbors:at:
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		col: 	5
		row: 	5
		rowNumber: 	5
		columnNumber: 	5
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		operations: 	ni
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard new findCellNeighbors: 5 at: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1039@31)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(179291136) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(983441920))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(109.0@35.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9250391
		lastStepMessage: 	nil
		lastCycleTime: 	9250459
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9250391
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9250391
		lastStepMessage: 	nil
		lastCycleTime: 	9250459
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9250391
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9250391
		lastStepMessage: 	nil
		lastCycleTime: 	9250459
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9250391
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Array class(Object)>>error:
Array class(Object)>>errorNotIndexable
Array class(Object)>>at:put:
ReversiBoard>>findCellNeighbors:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: This block accepts 0 arguments, but was called with 1 argument.
3 November 2019 10:27:10.650576 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

BlockClosure(Object)>>error:
	Receiver: [ col := col + 1 ]
	Arguments and temporary variables: 
		aString: 	'This block accepts 0 arguments, but was called with 1 argument.
	Receiver's instance variables: 
		outerContext: 	ReversiBoard>>findCellNeighbors:at:
		startpc: 	148
		numArgs: 	0


BlockClosure>>numArgsError:
	Receiver: [ col := col + 1 ]
	Arguments and temporary variables: 
		numArgsForInvocation: 	1
		printNArgs: 	[ :n | 
n printString , ' argument'
	,
		(n = 1
			ifTrue: [ '' ]
	...etc..
	Receiver's instance variables: 
		outerContext: 	ReversiBoard>>findCellNeighbors:at:
		startpc: 	148
		numArgs: 	0


BlockClosure>>value:
	Receiver: [ col := col + 1 ]
	Arguments and temporary variables: 
		anArg: 	ni
	Receiver's instance variables: 
		outerContext: 	ReversiBoard>>findCellNeighbors:at:
		startpc: 	148
		numArgs: 	0


ReversiBoard>>findCellNeighbors:at:
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		rowNumber: 	5
		columnNumber: 	5
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		operations: 	an Array([ col := col + 1 ] [ row := row - 1 ] [ col := col - 1 ] [...etc...
		col: 	5
		row: 	5
		direction: 	
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard new findCellNeighbors: 5 at: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1039@31)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(179291136) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(865022208))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(109.0@35.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 2 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9333127
		lastStepMessage: 	nil
		lastCycleTime: 	9333167
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9333127
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9333127
		lastStepMessage: 	nil
		lastCycleTime: 	9333167
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9333127
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9333127
		lastStepMessage: 	nil
		lastCycleTime: 	9333167
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9333127
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
BlockClosure(Object)>>error:
BlockClosure>>numArgsError:
BlockClosure>>value:
ReversiBoard>>findCellNeighbors:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: This block accepts 0 arguments, but was called with 1 argument.
3 November 2019 10:27:25.004186 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

BlockClosure(Object)>>error:
	Receiver: [ col := col + 1 ]
	Arguments and temporary variables: 
		aString: 	'This block accepts 0 arguments, but was called with 1 argument.
	Receiver's instance variables: 
		outerContext: 	ReversiBoard>>findCellNeighbors:at:
		startpc: 	148
		numArgs: 	0


BlockClosure>>numArgsError:
	Receiver: [ col := col + 1 ]
	Arguments and temporary variables: 
		numArgsForInvocation: 	1
		printNArgs: 	[ :n | 
n printString , ' argument'
	,
		(n = 1
			ifTrue: [ '' ]
	...etc..
	Receiver's instance variables: 
		outerContext: 	ReversiBoard>>findCellNeighbors:at:
		startpc: 	148
		numArgs: 	0


BlockClosure>>value:
	Receiver: [ col := col + 1 ]
	Arguments and temporary variables: 
		anArg: 	ni
	Receiver's instance variables: 
		outerContext: 	ReversiBoard>>findCellNeighbors:at:
		startpc: 	148
		numArgs: 	0


ReversiBoard>>findCellNeighbors:at:
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		rowNumber: 	5
		columnNumber: 	5
		neighbors: 	#(nil nil nil nil nil nil nil nil)
		operations: 	an Array([ col := col + 1 ] [ row := row - 1 ] [ col := col - 1 ] [...etc...
		col: 	5
		row: 	5
		direction: 	
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiBoard new findCellNeighbors: 5 at: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1039@31)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(179291136) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(81124608))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(308.0@163.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9347461
		lastStepMessage: 	nil
		lastCycleTime: 	9347527
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9347461
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9347461
		lastStepMessage: 	nil
		lastCycleTime: 	9347527
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9347461
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	9347461
		lastStepMessage: 	nil
		lastCycleTime: 	9347527
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	9347461
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
BlockClosure(Object)>>error:
BlockClosure>>numArgsError:
BlockClosure>>value:
ReversiBoard>>findCellNeighbors:at:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of BlockClosure did not understand #a
5 November 2019 6:33:58.383681 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

BlockClosure(Object)>>doesNotUnderstand: #a
	Receiver: [ 1 + 2 ]
	Arguments and temporary variables: 
		aMessage: 	a
		exception: 	MessageNotUnderstood: BlockClosure>>a
		resumeValue: 	ni
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	37
		numArgs: 	0


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		a: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| a |
	^ a := [ 1 + 2 ] a
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(846534656) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(632828928))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	168140854
		lastStepMessage: 	nil
		lastCycleTime: 	168140909
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	168140854
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	168140854
		lastStepMessage: 	nil
		lastCycleTime: 	168140909
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	168140854
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	168140854
		lastStepMessage: 	nil
		lastCycleTime: 	168140909
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	168140854
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
BlockClosure(Object)>>doesNotUnderstand: #a
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiCell did not understand #findCellNeighbors:at:
7 November 2019 7:00:16.564159 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiCell(Object)>>doesNotUnderstand: #findCellNeighbors:at:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		aMessage: 	findCellNeighbors: 1 at: 1
		exception: 	MessageNotUnderstood: ReversiCell>>findCellNeighbors:at:
		resumeValue: 	ni
	Receiver's instance variables: 
		neighbors: 	nil
		state: 	$_


ReversiBoard>>setCellNeighbors
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		row: 	1
		col: 	1
		cell: 	a ReversiCel
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


ReversiBoard>>initialize
	Receiver: a ReversiBoard
	Arguments and temporary variables: 

	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


ReversiBoard class(Behavior)>>new
	Receiver: ReversiBoard
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#boardAsString->ReversiBoard>>#boardAsString #ch...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard new.
	^ Transcript show: board boar...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(58996736) a RubCursor(430598144)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(498471936))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	342519025
		lastStepMessage: 	nil
		lastCycleTime: 	342519089
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	342519025
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	342519025
		lastStepMessage: 	nil
		lastCycleTime: 	342519089
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	342519025
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	342519025
		lastStepMessage: 	nil
		lastCycleTime: 	342519089
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	342519025
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiCell(Object)>>doesNotUnderstand: #findCellNeighbors:at:
ReversiBoard>>setCellNeighbors
ReversiBoard>>initialize
ReversiBoard class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of False did not understand #<
7 November 2019 7:01:16.184805 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

False(Object)>>doesNotUnderstand: #<
	Receiver: false
	Arguments and temporary variables: 
		aMessage: 	< 9
		exception: 	MessageNotUnderstood: False>><
		resumeValue: 	ni
	Receiver's instance variables: 
false

ReversiBoard>>findCellNeighbors:at:
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		rowNumber: 	1
		columnNumber: 	1
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil nil nil)
		operations: 	an Array([ col := col + 1 ] [ row := row - 1 ] [ col := col - 1 ] [...etc...
		col: 	2
		row: 	0
		direction: 	
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


ReversiBoard>>setCellNeighbors
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		row: 	1
		col: 	1
		cell: 	a ReversiCel
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


ReversiBoard>>initialize
	Receiver: a ReversiBoard
	Arguments and temporary variables: 

	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


ReversiBoard class(Behavior)>>new
	Receiver: ReversiBoard
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#boardAsString->ReversiBoard>>#boardAsString #ch...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ReversiBoard
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard new.
	^ Transcript show: board boar...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(58996736) a RubCursor(430598144)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(891159040))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(223.0@260.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	342578654
		lastStepMessage: 	nil
		lastCycleTime: 	342578707
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	342578654
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	342578654
		lastStepMessage: 	nil
		lastCycleTime: 	342578707
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	342578654
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	342578654
		lastStepMessage: 	nil
		lastCycleTime: 	342578707
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	342578654
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
False(Object)>>doesNotUnderstand: #<
ReversiBoard>>findCellNeighbors:at:
ReversiBoard>>setCellNeighbors
ReversiBoard>>initialize
ReversiBoard class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#state was sent to nil
7 November 2019 8:02:48.626614 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	MessageNotUnderstood: receiver of "state" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

ReversiCell>>makeWhiteInDirection:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		direction: 	2
		nextPiece: 	ni
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil a ReversiCell a ReversiCe...etc...
		state: 	$_


ReversiCell>>placeWhite
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		success: 	false
		direction: 	
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil a ReversiCell a ReversiCe...etc...
		state: 	$_


ReversiCell>>placePiece:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		pieceColor: 	$
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil a ReversiCell a ReversiCe...etc...
		state: 	$_


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	a ReversiBoar
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard new.
	Transcript show: board boardA...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@145)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(117693696) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(856688384))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	346271124
		lastStepMessage: 	nil
		lastCycleTime: 	346271147
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	346271124
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	346271124
		lastStepMessage: 	nil
		lastCycleTime: 	346271147
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	346271124
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	346271124
		lastStepMessage: 	nil
		lastCycleTime: 	346271147
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	346271124
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #state
UndefinedObject>>doesNotUnderstand: #state
ReversiCell>>makeWhiteInDirection:
ReversiCell>>placeWhite
ReversiCell>>placePiece:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiBoard did not understand #checkForLegalMoveWhite
7 November 2019 8:50:27.095138 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiBoard(Object)>>doesNotUnderstand: #checkForLegalMoveWhite
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		aMessage: 	checkForLegalMoveWhite
		exception: 	MessageNotUnderstood: ReversiBoard>>checkForLegalMoveWhite
		resumeValue: 	ni
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	a ReversiBoar
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard new.
	Transcript show: board boardA...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@183)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1022032128) a RubCursor(43059814...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(650050304))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349129578
		lastStepMessage: 	nil
		lastCycleTime: 	349129617
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349129578
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349129578
		lastStepMessage: 	nil
		lastCycleTime: 	349129617
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349129578
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349129578
		lastStepMessage: 	nil
		lastCycleTime: 	349129617
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349129578
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiBoard(Object)>>doesNotUnderstand: #checkForLegalMoveWhite
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#state was sent to nil
7 November 2019 8:51:00.791481 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	MessageNotUnderstood: receiver of "state" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

ReversiCell>>checkForLegalMoveWhiteInDirection:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		direction: 	2
		neighbor: 	ni
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil a ReversiCell a ReversiCe...etc...
		state: 	$_


ReversiCell>>checkForLegalMovesWhite
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil a ReversiCell a ReversiCe...etc...
		state: 	$_


ReversiBoard>>checkForLegalMovesWhite
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		row: 	1
		col: 	1
		cell: 	a ReversiCel
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	a ReversiBoar
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard new.
	Transcript show: board boardA...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@183)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(420342272) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(547525376))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349163285
		lastStepMessage: 	nil
		lastCycleTime: 	349163312
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349163285
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349163285
		lastStepMessage: 	nil
		lastCycleTime: 	349163312
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349163285
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349163285
		lastStepMessage: 	nil
		lastCycleTime: 	349163312
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349163285
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #state
UndefinedObject>>doesNotUnderstand: #state
ReversiCell>>checkForLegalMoveWhiteInDirection:
ReversiCell>>checkForLegalMovesWhite
ReversiBoard>>checkForLegalMovesWhite
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#state was sent to nil
7 November 2019 8:52:38.445198 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	MessageNotUnderstood: receiver of "state" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

ReversiCell>>checkForLegalMoveBlackInDirection:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		direction: 	2
		neighbor: 	ni
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil a ReversiCell a ReversiCe...etc...
		state: 	$_


ReversiCell>>checkForLegalMovesBlack
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil nil nil a ReversiCell a ReversiCe...etc...
		state: 	$_


ReversiBoard>>checkForLegalMovesBlack
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		row: 	1
		col: 	1
		cell: 	a ReversiCel
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	a ReversiBoar
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard new.
	Transcript show: board boardA...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@88)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(822251008) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(560807168))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349260944
		lastStepMessage: 	nil
		lastCycleTime: 	349260967
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349260944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349260944
		lastStepMessage: 	nil
		lastCycleTime: 	349260967
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349260944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	349260944
		lastStepMessage: 	nil
		lastCycleTime: 	349260967
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	349260944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #state
UndefinedObject>>doesNotUnderstand: #state
ReversiCell>>checkForLegalMoveBlackInDirection:
ReversiCell>>checkForLegalMovesBlack
ReversiBoard>>checkForLegalMovesBlack
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ByteString did not understand #display
7 November 2019 9:10:40.015607 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ByteString(Object)>>doesNotUnderstand: #display
	Receiver: '   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _ _ _ _ _ _ _
D  _ _ _ W B ...etc...
	Arguments and temporary variables: 
		aMessage: 	display
		exception: 	MessageNotUnderstood: ByteString>>display
		resumeValue: 	ni
	Receiver's instance variables: 
'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _ _ _ _ _ _ _
D  _ _ _ W B ...etc...

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	a ReversiBoar
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board |
	board := ReversiBoard new.
	^ board boardAsString display...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@88)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(832369920) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(128780032))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(172.0@57.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	350342506
		lastStepMessage: 	nil
		lastCycleTime: 	350342537
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	350342506
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	350342506
		lastStepMessage: 	nil
		lastCycleTime: 	350342537
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	350342506
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	350342506
		lastStepMessage: 	nil
		lastCycleTime: 	350342537
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	350342506
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>doesNotUnderstand: #display
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of UIManager class did not understand #request:initialAnswer:title:
7 November 2019 9:21:40.09798 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UIManager class(Object)>>doesNotUnderstand: #request:initialAnswer:title:
	Receiver: UIManager
	Arguments and temporary variables: 
		aMessage: 	request: 'Enter the cell in which to place your next piece (for examp...etc...
		exception: 	MessageNotUnderstood: UIManager class>>request:initialAnswer:title:
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#abort:->UIManager>>#abort: #abort:title:->UIMan...etc...
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{CommandLineUIManager. DummyUIManager. MorphicUIManager}
		name: 	#UIManager
		classPool: 	a Dictionary(#Default->a MorphicUIManager )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'UIManager-Base'


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	a ReversiBoard
		a: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board a |
	board := ReversiBoard new.
	Transcript show: board boar...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@145)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(178165248) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(835151360))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	351002603
		lastStepMessage: 	nil
		lastCycleTime: 	351002621
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	351002603
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	351002603
		lastStepMessage: 	nil
		lastCycleTime: 	351002621
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	351002603
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	351002603
		lastStepMessage: 	nil
		lastCycleTime: 	351002621
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	351002603
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UIManager class(Object)>>doesNotUnderstand: #request:initialAnswer:title:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of MorphicUIManager did not understand #title:
7 November 2019 9:23:02.949925 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

MorphicUIManager(Object)>>doesNotUnderstand: #title:
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 
		aMessage: 	title: 'Black''s Turn'
		exception: 	MessageNotUnderstood: MorphicUIManager>>title:
		resumeValue: 	ni
	Receiver's instance variables: 
		activeTranscript: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		board: 	a ReversiBoard
		a: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| board a |
	board := ReversiBoard new.
	Transcript show: board boar...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@145)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(178165248) a RubCursor(430598144...etc...
		fullBounds: 	(0@0) corner: (515@145)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(801977856))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	351085462
		lastStepMessage: 	nil
		lastCycleTime: 	351085447
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	351085462
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	351085462
		lastStepMessage: 	nil
		lastCycleTime: 	351085447
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	351085462
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	351085462
		lastStepMessage: 	nil
		lastCycleTime: 	351085447
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	351085462
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
MorphicUIManager(Object)>>doesNotUnderstand: #title:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #-
7 November 2019 9:54:34.191474 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #-
	Receiver: $A
	Arguments and temporary variables: 
		aMessage: 	- 64
		exception: 	MessageNotUnderstood: Character>>-
		resumeValue: 	ni
	Receiver's instance variables: 
$A

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ $A value - 64
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@31)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(793035520) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(194756864))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	352976677
		lastStepMessage: 	nil
		lastCycleTime: 	352976717
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	352976677
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	352976677
		lastStepMessage: 	nil
		lastCycleTime: 	352976717
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	352976677
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	352976677
		lastStepMessage: 	nil
		lastCycleTime: 	352976717
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	352976677
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #-
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #decode
7 November 2019 9:54:50.097103 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #decode
	Receiver: $A
	Arguments and temporary variables: 
		aMessage: 	decode
		exception: 	MessageNotUnderstood: Character>>decode
		resumeValue: 	ni
	Receiver's instance variables: 
$A

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ $A decode - 64
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@31)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(793035520) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(157298176))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	352992579
		lastStepMessage: 	nil
		lastCycleTime: 	352992621
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	352992579
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	352992579
		lastStepMessage: 	nil
		lastCycleTime: 	352992621
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	352992579
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	352992579
		lastStepMessage: 	nil
		lastCycleTime: 	352992621
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	352992579
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #decode
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #decode
7 November 2019 9:55:13.209509 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #decode
	Receiver: $A
	Arguments and temporary variables: 
		aMessage: 	decode
		exception: 	MessageNotUnderstood: Character>>decode
		resumeValue: 	ni
	Receiver's instance variables: 
$A

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ $A decode
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@31)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(498272000) a RubCursor(430598144...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(349052160))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353015685
		lastStepMessage: 	nil
		lastCycleTime: 	353015734
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353015685
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353015685
		lastStepMessage: 	nil
		lastCycleTime: 	353015734
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353015685
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353015685
		lastStepMessage: 	nil
		lastCycleTime: 	353015734
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353015685
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #decode
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of ReversiGame are not indexable
7 November 2019 10:00:32.735078 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiGame(Object)>>error:
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		aString: 	'Instances of ReversiGame are not indexable
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame(Object)>>errorNotIndexable
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame(Object)>>at:
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		col: 	nil
		input: 	a ReversiGame
		success: 	false
		row: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(859400960))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353335239
		lastStepMessage: 	nil
		lastCycleTime: 	353335214
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353335239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353335239
		lastStepMessage: 	nil
		lastCycleTime: 	353335214
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353335239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353335239
		lastStepMessage: 	nil
		lastCycleTime: 	353335214
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353335239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiGame(Object)>>error:
ReversiGame(Object)>>errorNotIndexable
ReversiGame(Object)>>at:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of ReversiGame are not indexable
7 November 2019 10:00:54.627926 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiGame(Object)>>error:
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		aString: 	'Instances of ReversiGame are not indexable
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame(Object)>>errorNotIndexable
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame(Object)>>at:
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		col: 	nil
		input: 	a ReversiGame
		success: 	false
		row: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(965139456))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353357137
		lastStepMessage: 	nil
		lastCycleTime: 	353357118
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353357137
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353357137
		lastStepMessage: 	nil
		lastCycleTime: 	353357118
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353357137
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353357137
		lastStepMessage: 	nil
		lastCycleTime: 	353357118
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353357137
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiGame(Object)>>error:
ReversiGame(Object)>>errorNotIndexable
ReversiGame(Object)>>at:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #asciiValue
7 November 2019 10:01:55.310292 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

SmallInteger(Object)>>doesNotUnderstand: #asciiValue
	Receiver: 0
	Arguments and temporary variables: 
		aMessage: 	asciiValue
		exception: 	MessageNotUnderstood: SmallInteger>>asciiValue
		resumeValue: 	ni
	Receiver's instance variables: 
0

Character>>>
	Receiver: $3
	Arguments and temporary variables: 
		aCharacter: 	
	Receiver's instance variables: 
$3

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		col: 	$3
		input: 	'D3'
		success: 	false
		row: 	
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(864355584))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(121.0@174.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353417819
		lastStepMessage: 	nil
		lastCycleTime: 	353417798
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353417819
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353417819
		lastStepMessage: 	nil
		lastCycleTime: 	353417798
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353417819
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353417819
		lastStepMessage: 	nil
		lastCycleTime: 	353417798
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353417819
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #asciiValue
Character>>>
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of False did not understand #whileFalse:
7 November 2019 10:03:29.49233 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

False(Object)>>doesNotUnderstand: #whileFalse:
	Receiver: false
	Arguments and temporary variables: 
		aMessage: 	whileFalse: [ input := self requestInputWithError.
row := (input at: ...etc...
		exception: 	MessageNotUnderstood: False>>whileFalse:
		resumeValue: 	ni
	Receiver's instance variables: 
false

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		col: 	51
		input: 	'D3'
		success: 	false
		row: 	
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(940689920))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353511999
		lastStepMessage: 	nil
		lastCycleTime: 	353511982
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353511999
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353511999
		lastStepMessage: 	nil
		lastCycleTime: 	353511982
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353511999
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353511999
		lastStepMessage: 	nil
		lastCycleTime: 	353511982
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353511999
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
False(Object)>>doesNotUnderstand: #whileFalse:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #asciiValue
7 November 2019 10:04:25.554905 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

SmallInteger(Object)>>doesNotUnderstand: #asciiValue
	Receiver: 0
	Arguments and temporary variables: 
		aMessage: 	asciiValue
		exception: 	MessageNotUnderstood: SmallInteger>>asciiValue
		resumeValue: 	ni
	Receiver's instance variables: 
0

Character>>>
	Receiver: $4
	Arguments and temporary variables: 
		aCharacter: 	
	Receiver's instance variables: 
$4

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	'C4'
		row: 	3
		col: 	$
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1052176640))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353568062
		lastStepMessage: 	nil
		lastCycleTime: 	353568045
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353568062
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353568062
		lastStepMessage: 	nil
		lastCycleTime: 	353568045
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353568062
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353568062
		lastStepMessage: 	nil
		lastCycleTime: 	353568045
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353568062
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #asciiValue
Character>>>
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of UndefinedObject are not indexable
7 November 2019 10:05:27.670889 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>error:
	Receiver: nil
	Arguments and temporary variables: 
		aString: 	'Instances of UndefinedObject are not indexable
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>errorNotIndexable
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>at:
	Receiver: nil
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
nil

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	nil
		row: 	5
		col: 	5
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(726176512))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353630181
		lastStepMessage: 	nil
		lastCycleTime: 	353630162
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353630181
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353630181
		lastStepMessage: 	nil
		lastCycleTime: 	353630162
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353630181
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353630181
		lastStepMessage: 	nil
		lastCycleTime: 	353630162
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353630181
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>error:
UndefinedObject(Object)>>errorNotIndexable
UndefinedObject(Object)>>at:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of UndefinedObject are not indexable
7 November 2019 10:05:56.40252 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>error:
	Receiver: nil
	Arguments and temporary variables: 
		aString: 	'Instances of UndefinedObject are not indexable
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>errorNotIndexable
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>at:
	Receiver: nil
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
nil

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	nil
		row: 	nil
		col: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1022249216))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353658912
		lastStepMessage: 	nil
		lastCycleTime: 	353658891
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353658912
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353658912
		lastStepMessage: 	nil
		lastCycleTime: 	353658891
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353658912
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353658912
		lastStepMessage: 	nil
		lastCycleTime: 	353658891
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353658912
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>error:
UndefinedObject(Object)>>errorNotIndexable
UndefinedObject(Object)>>at:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of UndefinedObject are not indexable
7 November 2019 10:06:32.897338 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>error:
	Receiver: nil
	Arguments and temporary variables: 
		aString: 	'Instances of UndefinedObject are not indexable
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>errorNotIndexable
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>at:
	Receiver: nil
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
nil

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	nil
		row: 	nil
		col: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(934206720))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353695403
		lastStepMessage: 	nil
		lastCycleTime: 	353695386
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353695403
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353695403
		lastStepMessage: 	nil
		lastCycleTime: 	353695386
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353695403
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353695403
		lastStepMessage: 	nil
		lastCycleTime: 	353695386
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353695403
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>error:
UndefinedObject(Object)>>errorNotIndexable
UndefinedObject(Object)>>at:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of UndefinedObject are not indexable
7 November 2019 10:07:11.083318 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>error:
	Receiver: nil
	Arguments and temporary variables: 
		aString: 	'Instances of UndefinedObject are not indexable
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>errorNotIndexable
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>at:
	Receiver: nil
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
nil

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	nil
		row: 	9
		col: 	5
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(283445248))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353733595
		lastStepMessage: 	nil
		lastCycleTime: 	353733585
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353733595
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353733595
		lastStepMessage: 	nil
		lastCycleTime: 	353733585
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353733595
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353733595
		lastStepMessage: 	nil
		lastCycleTime: 	353733585
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353733595
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>error:
UndefinedObject(Object)>>errorNotIndexable
UndefinedObject(Object)>>at:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 1
7 November 2019 10:07:46.317125 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ByteString(Object)>>errorSubscriptBounds:
	Receiver: ''
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
''

ByteString(Object)>>at:
	Receiver: ''
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
''

ByteString>>at:
	Receiver: ''
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
''

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	''
		row: 	9
		col: 	5
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(116744704)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(116744704)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(404347648)
		submorphs: 	an Array(a RubPrimarySelectionMorph(1032521984) a RubCursor(43059814...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (45532416) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(836998400)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(430598144)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(138757632))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(344506112)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353768812
		lastStepMessage: 	nil
		lastCycleTime: 	353768802
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353768812
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353768812
		lastStepMessage: 	nil
		lastCycleTime: 	353768802
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353768812
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(283851520) named: Pl...etc...
		lastStepTime: 	353768812
		lastStepMessage: 	nil
		lastCycleTime: 	353768802
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(430598144)))
		lastAlarmTime: 	353768812
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>errorSubscriptBounds:
ByteString(Object)>>at:
ByteString>>at:
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
7 November 2019 10:14:41.918468 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750646481885513


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	64
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750646481885513


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	20
		wait2: 	2
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354184413
		lastStepMessage: 	nil
		lastCycleTime: 	354184413
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(209894656)))
		lastAlarmTime: 	354184413
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354184413
		lastStepMessage: 	nil
		lastCycleTime: 	354184413
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(209894656)))
		lastAlarmTime: 	354184413
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(218963200) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240)
		aWidget: 	a TextEntryDialogWindow(218963200) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(30.0@146.0) corner: (1089.0@893.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(30@146) corner: (1089@893)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(30.0@146.0) corner: (1089.0@893.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


BlockClosure>>ensure:
	Receiver: [ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aW...etc...
	Arguments and temporary variables: 
		aBlock: 	[ mySysWin modalUnlockFrom: aSystemWindow.
self activeHand newKeyboardF...etc...
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	GLMSystemWindow(Morph)>>openModal:
		startpc: 	319
		numArgs: 	0


GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(218963200) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240
	Receiver's instance variables: 
		bounds: 	(30.0@146.0) corner: (1089.0@893.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(30@146) corner: (1089@893)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(30.0@146.0) corner: (1089.0@893.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


GLMSystemWindow(SystemWindow)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(218963200) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(30.0@146.0) corner: (1089.0@893.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(30@146) corner: (1089@893)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(30.0@146.0) corner: (1089.0@893.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
	Receiver: a PharoDarkTheme
	Arguments and temporary variables: 
		aThemedMorph: 	a GLMSystemWindow(992577536) named: Playground
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		aString: 	'Black''s Turn'
		defaultEntryText: 	'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a RubTextScrollPane(963232256)->a BorderedMorph(634852096)
		windowActiveDropShadowStyle: 	#diffuse


MorphicUIManager>>request:initialAnswer:title:
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		defaultAnswer: 	''
		aTitle: 	'Black''s Turn'
		modalMorph: 	a GLMSystemWindow(992577536) named: Playgroun
	Receiver's instance variables: 
		activeTranscript: 	nil


ReversiGame>>requestInputWithError
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	'I9'
		row: 	9
		col: 	5
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1039@69)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(737673472) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (1039@69)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(365434624))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(248.0@89.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354184413
		lastStepMessage: 	nil
		lastCycleTime: 	354184413
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(209894656)))
		lastAlarmTime: 	354184413
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354184413
		lastStepMessage: 	nil
		lastCycleTime: 	354184413
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(209894656)))
		lastAlarmTime: 	354184413
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354184413
		lastStepMessage: 	nil
		lastCycleTime: 	354184413
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(209894656)))
		lastAlarmTime: 	354184413
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
BlockClosure>>ensure:
GLMSystemWindow(Morph)>>openModal:
GLMSystemWindow(SystemWindow)>>openModal:
PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
MorphicUIManager>>request:initialAnswer:title:
ReversiGame>>requestInputWithError
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiGame did not understand #delete
7 November 2019 10:15:01.043305 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiGame(Object)>>doesNotUnderstand: #delete
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		aMessage: 	delete
		exception: 	MessageNotUnderstood: ReversiGame>>delete
		resumeValue: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	nil
		row: 	nil
		col: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1039@69)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(737673472) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (1039@69)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(433671936))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(202.0@95.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354203552
		lastStepMessage: 	nil
		lastCycleTime: 	354203537
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354203552
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354203552
		lastStepMessage: 	nil
		lastCycleTime: 	354203537
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354203552
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354203552
		lastStepMessage: 	nil
		lastCycleTime: 	354203537
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354203552
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiGame(Object)>>doesNotUnderstand: #delete
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
7 November 2019 10:15:21.844482 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750646521839999


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	64
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750646521839999


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	20
		wait2: 	2
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354224366
		lastStepMessage: 	nil
		lastCycleTime: 	354224366
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(390976000)))
		lastAlarmTime: 	354224366
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354224366
		lastStepMessage: 	nil
		lastCycleTime: 	354224366
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(390976000)))
		lastAlarmTime: 	354224366
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(89990656) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240)
		aWidget: 	a TextEntryDialogWindow(89990656) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(-9.0@165.0) corner: (1050.0@912.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(-9@165) corner: (1050@912)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(-9.0@165.0) corner: (1050.0@912.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


BlockClosure>>ensure:
	Receiver: [ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aW...etc...
	Arguments and temporary variables: 
		aBlock: 	[ mySysWin modalUnlockFrom: aSystemWindow.
self activeHand newKeyboardF...etc...
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	GLMSystemWindow(Morph)>>openModal:
		startpc: 	319
		numArgs: 	0


GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(89990656) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240
	Receiver's instance variables: 
		bounds: 	(-9.0@165.0) corner: (1050.0@912.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(-9@165) corner: (1050@912)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(-9.0@165.0) corner: (1050.0@912.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


GLMSystemWindow(SystemWindow)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(89990656) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(-9.0@165.0) corner: (1050.0@912.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(-9@165) corner: (1050@912)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(-9.0@165.0) corner: (1050.0@912.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
	Receiver: a PharoDarkTheme
	Arguments and temporary variables: 
		aThemedMorph: 	a GLMSystemWindow(992577536) named: Playground
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		aString: 	'Black''s Turn'
		defaultEntryText: 	'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a RubTextScrollPane(909830912)->a BorderedMorph(374855936)
		windowActiveDropShadowStyle: 	#diffuse


MorphicUIManager>>request:initialAnswer:title:
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		defaultAnswer: 	''
		aTitle: 	'Black''s Turn'
		modalMorph: 	a GLMSystemWindow(992577536) named: Playgroun
	Receiver's instance variables: 
		activeTranscript: 	nil


ReversiGame>>requestInputWithError
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	'I9'
		row: 	9
		col: 	5
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1039@69)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(737673472) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (1039@69)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(80254720))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(202.0@95.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354224366
		lastStepMessage: 	nil
		lastCycleTime: 	354224366
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(390976000)))
		lastAlarmTime: 	354224366
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354224366
		lastStepMessage: 	nil
		lastCycleTime: 	354224366
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(390976000)))
		lastAlarmTime: 	354224366
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354224366
		lastStepMessage: 	nil
		lastCycleTime: 	354224366
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(390976000)))
		lastAlarmTime: 	354224366
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
BlockClosure>>ensure:
GLMSystemWindow(Morph)>>openModal:
GLMSystemWindow(SystemWindow)>>openModal:
PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
MorphicUIManager>>request:initialAnswer:title:
ReversiGame>>requestInputWithError
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
7 November 2019 10:19:31.426946 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750646771413444


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	64
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750646771413444


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	20
		wait2: 	2
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354473941
		lastStepMessage: 	nil
		lastCycleTime: 	354473941
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(491950080)))
		lastAlarmTime: 	354473941
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354473941
		lastStepMessage: 	nil
		lastCycleTime: 	354473941
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(491950080)))
		lastAlarmTime: 	354473941
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(104851200) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240)
		aWidget: 	a TextEntryDialogWindow(104851200) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(7.0@138.0) corner: (1066.0@885.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(7@138) corner: (1066@885)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(7.0@138.0) corner: (1066.0@885.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


BlockClosure>>ensure:
	Receiver: [ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aW...etc...
	Arguments and temporary variables: 
		aBlock: 	[ mySysWin modalUnlockFrom: aSystemWindow.
self activeHand newKeyboardF...etc...
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	GLMSystemWindow(Morph)>>openModal:
		startpc: 	319
		numArgs: 	0


GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(104851200) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240
	Receiver's instance variables: 
		bounds: 	(7.0@138.0) corner: (1066.0@885.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(7@138) corner: (1066@885)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(7.0@138.0) corner: (1066.0@885.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


GLMSystemWindow(SystemWindow)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(104851200) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(7.0@138.0) corner: (1066.0@885.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(7@138) corner: (1066@885)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(7.0@138.0) corner: (1066.0@885.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
	Receiver: a PharoDarkTheme
	Arguments and temporary variables: 
		aThemedMorph: 	a GLMSystemWindow(992577536) named: Playground
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		aString: 	'Black''s Turn'
		defaultEntryText: 	'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a RubTextScrollPane(396983296)->a BorderedMorph(942723328)
		windowActiveDropShadowStyle: 	#diffuse


MorphicUIManager>>request:initialAnswer:title:
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		defaultAnswer: 	''
		aTitle: 	'Black''s Turn'
		modalMorph: 	a GLMSystemWindow(992577536) named: Playgroun
	Receiver's instance variables: 
		activeTranscript: 	nil


ReversiGame>>requestInputWithError
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	'I9'
		row: 	9
		col: 	5
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(737673472) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(366593024))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(265@109)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354473941
		lastStepMessage: 	nil
		lastCycleTime: 	354473941
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(491950080)))
		lastAlarmTime: 	354473941
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354473941
		lastStepMessage: 	nil
		lastCycleTime: 	354473941
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(491950080)))
		lastAlarmTime: 	354473941
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354473941
		lastStepMessage: 	nil
		lastCycleTime: 	354473941
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(491950080)))
		lastAlarmTime: 	354473941
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
BlockClosure>>ensure:
GLMSystemWindow(Morph)>>openModal:
GLMSystemWindow(SystemWindow)>>openModal:
PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
MorphicUIManager>>request:initialAnswer:title:
ReversiGame>>requestInputWithError
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #asNumber
7 November 2019 10:20:55.256218 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #asNumber
	Receiver: $9
	Arguments and temporary variables: 
		aMessage: 	asNumber
		exception: 	MessageNotUnderstood: Character>>asNumber
		resumeValue: 	ni
	Receiver's instance variables: 
$9

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	'A9'
		row: 	1
		col: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(737673472) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(918030336))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(265@109)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354557763
		lastStepMessage: 	nil
		lastCycleTime: 	354557744
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354557763
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354557763
		lastStepMessage: 	nil
		lastCycleTime: 	354557744
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354557763
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354557763
		lastStepMessage: 	nil
		lastCycleTime: 	354557744
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354557763
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #asNumber
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #translateToUppercase
7 November 2019 10:23:57.596392 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

Character(Object)>>doesNotUnderstand: #translateToUppercase
	Receiver: $D
	Arguments and temporary variables: 
		aMessage: 	translateToUppercase
		exception: 	MessageNotUnderstood: Character>>translateToUppercase
		resumeValue: 	ni
	Receiver's instance variables: 
$D

ReversiGame>>nextTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	'D3'
		row: 	nil
		col: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	a ReversiGam
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	game := ReversiGame new.
	^ game nextTurn
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@69)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(737673472) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (515@69)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(589307904))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(323@102)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354740105
		lastStepMessage: 	nil
		lastCycleTime: 	354740082
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354740105
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354740105
		lastStepMessage: 	nil
		lastCycleTime: 	354740082
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354740105
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	354740105
		lastStepMessage: 	nil
		lastCycleTime: 	354740082
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	354740105
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #translateToUppercase
ReversiGame>>nextTurn
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#state was sent to nil
7 November 2019 10:45:53.156343 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	MessageNotUnderstood: receiver of "state" is nil
		resumeValue: 	ni
	Receiver's instance variables: 
nil

UndefinedObject>>doesNotUnderstand: #state
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	state
		exception: 	nil
		resumeValue: 	nil
		node: 	ni
	Receiver's instance variables: 
nil

ReversiCell>>checkForLegalMoveBlackInDirection:
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		direction: 	5
		neighbor: 	ni
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil a ReversiCell a ReversiCell a Rev...etc...
		state: 	$_


ReversiCell>>checkForLegalMovesBlack
	Receiver: a ReversiCell
	Arguments and temporary variables: 
		index: 	
	Receiver's instance variables: 
		neighbors: 	an Array(a ReversiCell nil nil nil a ReversiCell a ReversiCell a Rev...etc...
		state: 	$_


ReversiBoard>>checkForLegalMovesBlack
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		row: 	1
		col: 	2
		cell: 	a ReversiCel
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


ReversiBoard>>checkForLegalMoves:
	Receiver: a ReversiBoard
	Arguments and temporary variables: 
		color: 	$
	Receiver's instance variables: 
		cells: 	(a ReversiCell a ReversiCell a ReversiCell a ReversiCell a ReversiCell a...etc...


ReversiGame>>initialize
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


ReversiGame class(Behavior)>>new
	Receiver: ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#endGame->ReversiGame>>#endGame #initialize->Rev...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ReversiGame
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	^ game := ReversiGame new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@50)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(313176320) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (515@50)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(74408960))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	356055663
		lastStepMessage: 	nil
		lastCycleTime: 	356055647
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	356055663
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	356055663
		lastStepMessage: 	nil
		lastCycleTime: 	356055647
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	356055663
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	356055663
		lastStepMessage: 	nil
		lastCycleTime: 	356055647
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	356055663
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #state
UndefinedObject>>doesNotUnderstand: #state
ReversiCell>>checkForLegalMoveBlackInDirection:
ReversiCell>>checkForLegalMovesBlack
ReversiBoard>>checkForLegalMovesBlack
ReversiBoard>>checkForLegalMoves:
ReversiGame>>initialize
ReversiGame class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #do:
7 November 2019 11:17:09.297391 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

SmallInteger(Object)>>doesNotUnderstand: #do:
	Receiver: 0
	Arguments and temporary variables: 
		aMessage: 	do: [ :v | self nextPut: v ]
		exception: 	MessageNotUnderstood: SmallInteger>>do:
		resumeValue: 	ni
	Receiver's instance variables: 
0

WriteStream(Stream)>>nextPutAll:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		aCollection: 	
	Receiver's instance variables: 
		collection: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _ _ ...etc...
		position: 	199
		readLimit: 	0
		writeLimit: 	206


WriteStream>>nextPutAll:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		aCollection: 	0
		newEnd: 	ni
	Receiver's instance variables: 
		collection: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _ _ ...etc...
		position: 	199
		readLimit: 	0
		writeLimit: 	206


[ :stream | 
stream
	nextPutAll: board boardAsString;
	cr;
	nextPutAll: 'The final score is:';
	cr;
	nextPutAll: 'Black: ';
	nextPutAll: (scores at: 1);
	nextPutAll: ' points.';
	cr;
	nextPutAll: 'White: ';
	nextPutAll: (scores at: 2);
	nextPutAll: ' points.';
	cr;
	nextPutAll: message ] in ReversiGame>>endGame
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		scores: 	#(0 0)
		message: 	'The game is a draw.'
		stream: 	a WriteStrea
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


String class(SequenceableCollection class)>>new:streamContents:
	Receiver: String
	Arguments and temporary variables: 
		newSize: 	100
		blockWithArg: 	[ :stream | 
stream
	nextPutAll: board boardAsString;
	cr;
	nextP...etc...
		stream: 	a WriteStrea
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


String class(SequenceableCollection class)>>streamContents:
	Receiver: String
	Arguments and temporary variables: 
		blockWithArg: 	[ :stream | 
stream
	nextPutAll: board boardAsString;
	cr;
	nextP...etc..
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 312)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


ReversiGame>>endGame
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		scores: 	#(0 0)
		message: 	'The game is a draw.
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


ReversiGame>>takeTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


ReversiGame>>initialize
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


ReversiGame class(Behavior)>>new
	Receiver: ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#endGame->ReversiGame>>#endGame #initialize->Rev...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ReversiGame
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	^ game := ReversiGame new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@88)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(497110016) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (515@88)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1061924864))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357931801
		lastStepMessage: 	nil
		lastCycleTime: 	357931783
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	357931801
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357931801
		lastStepMessage: 	nil
		lastCycleTime: 	357931783
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	357931801
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357931801
		lastStepMessage: 	nil
		lastCycleTime: 	357931783
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	357931801
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #do:
WriteStream(Stream)>>nextPutAll:
WriteStream>>nextPutAll:
[ :stream | 
stream
	nextPutAll: board boardAsString;
	cr;
	nextPutAll: 'The final score is:';
	cr;
	nextPutAll: 'Black: ';
	nextPutAll: (scores at: 1);
	nextPutAll: ' points.';
	cr;
	nextPutAll: 'White: ';
	nextPutAll: (scores at: 2);
	nextPutAll: ' points.';
	cr;
	nextPutAll: message ] in ReversiGame>>endGame
String class(SequenceableCollection class)>>new:streamContents:
String class(SequenceableCollection class)>>streamContents:
ReversiGame>>endGame
ReversiGame>>takeTurn
ReversiGame>>initialize
ReversiGame class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
7 November 2019 11:18:13.731011 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750650293712699


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	64
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750650293712699


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	20
		wait2: 	2
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357996239
		lastStepMessage: 	nil
		lastCycleTime: 	357996239
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(825191424)))
		lastAlarmTime: 	357996239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357996239
		lastStepMessage: 	nil
		lastCycleTime: 	357996239
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(825191424)))
		lastAlarmTime: 	357996239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(730326528) named: White's turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240)
		aWidget: 	a TextEntryDialogWindow(730326528) named: White's tur
	Receiver's instance variables: 
		bounds: 	(76.0@144.0) corner: (1135.0@891.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(76@144) corner: (1135@891)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(76.0@144.0) corner: (1135.0@891.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


BlockClosure>>ensure:
	Receiver: [ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aW...etc...
	Arguments and temporary variables: 
		aBlock: 	[ mySysWin modalUnlockFrom: aSystemWindow.
self activeHand newKeyboardF...etc...
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	GLMSystemWindow(Morph)>>openModal:
		startpc: 	319
		numArgs: 	0


GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(730326528) named: White's turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240
	Receiver's instance variables: 
		bounds: 	(76.0@144.0) corner: (1135.0@891.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(76@144) corner: (1135@891)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(76.0@144.0) corner: (1135.0@891.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


GLMSystemWindow(SystemWindow)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(730326528) named: White's tur
	Receiver's instance variables: 
		bounds: 	(76.0@144.0) corner: (1135.0@891.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(76@144) corner: (1135@891)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(76.0@144.0) corner: (1135.0@891.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
	Receiver: a PharoDarkTheme
	Arguments and temporary variables: 
		aThemedMorph: 	a GLMSystemWindow(992577536) named: Playground
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		aString: 	'White''s turn'
		defaultEntryText: 	'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a RubTextScrollPane(546897920)->a BorderedMorph(485747968)
		windowActiveDropShadowStyle: 	#diffuse


MorphicUIManager>>request:initialAnswer:title:
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		defaultAnswer: 	''
		aTitle: 	'White''s turn'
		modalMorph: 	a GLMSystemWindow(992577536) named: Playgroun
	Receiver's instance variables: 
		activeTranscript: 	nil


ReversiGame>>requestInput
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$W
		active: 	true


ReversiGame>>takeTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$W
		active: 	true


ReversiGame>>initialize
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$W
		active: 	true


ReversiGame class(Behavior)>>new
	Receiver: ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#endGame->ReversiGame>>#endGame #initialize->Rev...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ReversiGame
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	^ game := ReversiGame new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@88)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(497110016) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (515@88)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(304775680))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(179.0@274.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357996239
		lastStepMessage: 	nil
		lastCycleTime: 	357996239
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(825191424)))
		lastAlarmTime: 	357996239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357996239
		lastStepMessage: 	nil
		lastCycleTime: 	357996239
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(825191424)))
		lastAlarmTime: 	357996239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	357996239
		lastStepMessage: 	nil
		lastCycleTime: 	357996239
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(825191424)))
		lastAlarmTime: 	357996239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
BlockClosure>>ensure:
GLMSystemWindow(Morph)>>openModal:
GLMSystemWindow(SystemWindow)>>openModal:
PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
MorphicUIManager>>request:initialAnswer:title:
ReversiGame>>requestInput
ReversiGame>>takeTurn
ReversiGame>>initialize
ReversiGame class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
7 November 2019 11:19:01.463679 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750650341417643


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	ni
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	64
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3750650341417643


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	20
		wait2: 	2
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	358043944
		lastStepMessage: 	nil
		lastCycleTime: 	358043944
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(350966272)))
		lastAlarmTime: 	358043944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	358043944
		lastStepMessage: 	nil
		lastCycleTime: 	358043944
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(350966272)))
		lastAlarmTime: 	358043944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(662057472) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240)
		aWidget: 	a TextEntryDialogWindow(662057472) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(76.0@144.0) corner: (1135.0@891.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(76@144) corner: (1135@891)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(76.0@144.0) corner: (1135.0@891.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


BlockClosure>>ensure:
	Receiver: [ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aW...etc...
	Arguments and temporary variables: 
		aBlock: 	[ mySysWin modalUnlockFrom: aSystemWindow.
self activeHand newKeyboardF...etc...
		complete: 	nil
		returnValue: 	ni
	Receiver's instance variables: 
		outerContext: 	GLMSystemWindow(Morph)>>openModal:
		startpc: 	319
		numArgs: 	0


GLMSystemWindow(Morph)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(662057472) named: Black's Turn
		area: 	(0@18) corner: (1629@968.0)
		mySysWin: 	a GLMSystemWindow(992577536) named: Playground
		keyboardFocus: 	a RubEditingArea(780330240
	Receiver's instance variables: 
		bounds: 	(76.0@144.0) corner: (1135.0@891.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(76@144) corner: (1135@891)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(76.0@144.0) corner: (1135.0@891.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


GLMSystemWindow(SystemWindow)>>openModal:
	Receiver: a GLMSystemWindow(992577536) named: Playground
	Arguments and temporary variables: 
		aSystemWindow: 	a TextEntryDialogWindow(662057472) named: Black's Tur
	Receiver's instance variables: 
		bounds: 	(76.0@144.0) corner: (1135.0@891.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	an Array(a WindowEdgeGripMorph(460011520) a WindowEdgeGripMorph(4765...etc...
		fullBounds: 	(76@144) corner: (1135@891)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (863435008) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.1348973607038123 g: 0.1348973607038123 b: 0.1348973607...etc...
		model: 	a GTPlayground(id=620365824 title='Playground' pane=a GLMPane(135461632 ...etc...
		labelString: 	'Playground'
		stripes: 	an Array(a Morph(373402112) a Morph(826110464))
		label: 	a LabelMorph(36097536)'Playground'
		closeBox: 	a MultistateButtonMorph(695561472)
		collapseBox: 	a MultistateButtonMorph(152362496)
		paneMorphs: 	an Array(a GLMFoundationBrick(465651712))
		collapsedFrame: 	nil
		fullFrame: 	(76.0@144.0) corner: (1135.0@891.0)
		isCollapsed: 	false
		menuBox: 	a MultistateButtonMorph(959204096)
		mustNotClose: 	false
		labelWidgetAllowance: 	183.0
		updatablePanes: 	#()
		labelArea: 	an AlignmentMorph(84379648)
		expandBox: 	a MultistateButtonMorph(185446912)
		embeddable: 	nil
		menuBuilder: 	nil
		isResizeable: 	true
		toolbarBox: 	a ToolDockingBarMorph(87711232)
		hasInitialStep: 	true


PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
	Receiver: a PharoDarkTheme
	Arguments and temporary variables: 
		aThemedMorph: 	a GLMSystemWindow(992577536) named: Playground
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		aString: 	'Black''s Turn'
		defaultEntryText: 	'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a RubTextScrollPane(630327808)->a BorderedMorph(385053440)
		windowActiveDropShadowStyle: 	#diffuse


MorphicUIManager>>request:initialAnswer:title:
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 
		aStringOrText: 	'   1 2 3 4 5 6 7 8
A  _ _ _ _ _ _ _ _
B  _ _ _ _ _ _ _ _
C  _ _...etc...
		defaultAnswer: 	''
		aTitle: 	'Black''s Turn'
		modalMorph: 	a GLMSystemWindow(992577536) named: Playgroun
	Receiver's instance variables: 
		activeTranscript: 	nil


ReversiGame>>requestInput
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


ReversiGame>>takeTurn
	Receiver: a ReversiGame
	Arguments and temporary variables: 
		success: 	false
		input: 	ni
	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


ReversiGame>>initialize
	Receiver: a ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		board: 	a ReversiBoard
		turn: 	$B
		active: 	true


ReversiGame class(Behavior)>>new
	Receiver: ReversiGame
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#endGame->ReversiGame>>#endGame #initialize->Rev...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ReversiGame
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		game: 	ni
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	| game |
	^ game := ReversiGame new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@88)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(497110016) a RubCursor(878047232...etc...
		fullBounds: 	(0@0) corner: (515@88)
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(672105728))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	(179.0@274.0)
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	358043944
		lastStepMessage: 	nil
		lastCycleTime: 	358043944
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(350966272)))
		lastAlarmTime: 	358043944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	358043944
		lastStepMessage: 	nil
		lastCycleTime: 	358043944
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(350966272)))
		lastAlarmTime: 	358043944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	358043944
		lastStepMessage: 	nil
		lastCycleTime: 	358043944
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(350966272)))
		lastAlarmTime: 	358043944
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a TextE...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
[ | aWidget |
aWidget := aSystemWindow openAsIs.
self activeHand mouseFocus: aWidget.
[ aWidget world notNil ]
	whileTrue: [ aWidget outermostWorldMorph doOneCycle ] ] in GLMSystemWindow(Morph)>>openModal:
BlockClosure>>ensure:
GLMSystemWindow(Morph)>>openModal:
GLMSystemWindow(SystemWindow)>>openModal:
PharoDarkTheme(UITheme)>>textEntryIn:text:title:entryText:
MorphicUIManager>>request:initialAnswer:title:
ReversiGame>>requestInput
ReversiGame>>takeTurn
ReversiGame>>initialize
ReversiGame class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
AssertionFailure: Project location must exist!
8 November 2019 1:54:53.501931 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

IceTipLocalRepositoryPanel(Object)>>assert:description:
	Receiver: an IceTipLocalRepositoryPanel
	Arguments and temporary variables: 
		aBlock: 	false
		aStringOrBlock: 	'Project location must exist!
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(an IceTipDirectoryPresenter an OkCancelToolbar...etc...
		owner: 	nil
		window: 	a NewValueHolder[ a DialogWindowPresenter ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Import from existing clone' ]
		projectLocation: 	an IceTipDirectoryPresenter
		remoteLabel: 	nil
		remoteInputText: 	nil
		spacePanel: 	a MorphicGenericAdapter
		repository: 	nil


IceTipLocalRepositoryPanel>>validate
	Receiver: an IceTipLocalRepositoryPanel
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(an IceTipDirectoryPresenter an OkCancelToolbar...etc...
		owner: 	nil
		window: 	a NewValueHolder[ a DialogWindowPresenter ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Import from existing clone' ]
		projectLocation: 	an IceTipDirectoryPresenter
		remoteLabel: 	nil
		remoteInputText: 	nil
		spacePanel: 	a MorphicGenericAdapter
		repository: 	nil


[ dialog validate.
self repositoryModel updateLocation: dialog location.
true ] in IceTipRepairLocateRepository>>basicExecute
	Receiver: an IceTipRepairLocateRepository
	Arguments and temporary variables: 
		dialog: 	an IceTipLocalRepositoryPane
	Receiver's instance variables: 
		repository: 	nil
		successBlock: 	nil
		repositoryModel: 	an IceTipCachedModel(an IceTipRepositoryModel)


[ okAction value value == false
	ifFalse: [ owner ifNil: [ self delete ] ifNotNil: [ owner delete ] ] ] in OkCancelToolbar(OkToolbar)>>okActionBlock
	Receiver: an OkCancelToolbar
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter)
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(a ButtonPresenter a ButtonPresenter a DialogWi...etc...
		owner: 	a SpecDialogWindow(548925184) named: Import from existing clone
		window: 	a NewValueHolder[ nil ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Ok Cancel' ]
		okButton: 	a ButtonPresenter
		okAction: 	a NewValueHolder[ [ dialog validate.
self repositoryModel updateLocat...etc...
		cancelButton: 	a ButtonPresenter
		cancelAction: 	a NewValueHolder[ [ true ] ]
		cancelled: 	a NewValueHolder[ false ]


ButtonPresenter>>performAction
	Receiver: a ButtonPresenter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicButtonAdapter)
		announcer: 	an Announcer
		focusOrder: 	nil
		owner: 	an OkCancelToolbar
		window: 	a NewValueHolder[ nil ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary(Character space->[ self action ] )
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Button' ]
		helpHolder: 	a NewValueHolder[ nil ]
		borderWidth: 	a NewValueHolder[ 0 ]
		borderColor: 	a NewValueHolder[ Color transparent ]
		enabledHolder: 	a NewValueHolder[ true ]
		dragEnabled: 	a NewValueHolder[ false ]
		dropEnabled: 	a NewValueHolder[ false ]
		dragTransformationBlock: 	a NewValueHolder[ [ :item :source | item ] ]
		wantDropBlock: 	a NewValueHolder[ [ :draggedItem :event :source | self dropEnabl...etc...
		acceptDropBlock: 	a NewValueHolder[ [ :draggedItem :event :source |  ] ]
		transferBlock: 	a NewValueHolder[ [ :passenger :source | self defaultTransferFor...etc...
		color: 	a NewValueHolder[ nil ]
		actionHolder: 	a NewValueHolder[ [ okAction value value == false
	ifFalse: [ own...etc...
		labelHolder: 	a CollectionValueHolder[ 'Ok' ]
		fontHolder: 	a NewValueHolder[ nil ]
		stateHolder: 	a NewValueHolder[ false ]
		actionPerformedHolder: 	a NewValueHolder[ nil ]
		askBeforeChangingHolder: 	a NewValueHolder[ false ]
		iconHolder: 	a NewValueHolder[ nil ]
		menuHolder: 	a NewValueHolder[ a MenuPresenter ]
		shortcutHolder: 	a NewValueHolder[ nil ]


MorphicButtonAdapter>>action
	Receiver: a MorphicButtonAdapter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a PluggableButtonMorph(300701440))
		announcer: 	nil
		model: 	a ButtonPresenter
		widget: 	a PluggableButtonMorph(300701440)
		selector: 	nil


PluggableButtonMorph>>performAction:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		event: 	[(917@434) mouseUp 410596017 nil
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTrue: [ m performAction: evt ] ] ] in PluggableButtonMorph>>mouseUp:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		evt: 	[(917@434) mouseUp 410596017 nil]
		all: 	an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(30070144...etc...
		m: 	a PluggableButtonMorph(300701440
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


Array(SequenceableCollection)>>do:
	Receiver: an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(300701440))
	Arguments and temporary variables: 
		aBlock: 	[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTr...etc...
		index: 	
	Receiver's instance variables: 
an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(300701440))

PluggableButtonMorph>>mouseUp:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		evt: 	[(917@434) mouseUp 410596017 nil]
		all: 	an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(30070144...etc..
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


PluggableButtonMorph(Morph)>>handleMouseUp:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		anEvent: 	[(917@434) mouseUp 410596017 nil]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


MouseButtonEvent>>sentTo:
	Receiver: [(917@434) mouseUp 410596017 nil]
	Arguments and temporary variables: 
		anObject: 	a PluggableButtonMorph(300701440
	Receiver's instance variables: 
		timeStamp: 	410596017
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(917@434)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


PluggableButtonMorph(Morph)>>handleEvent:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		anEvent: 	[(917@434) mouseUp 410596017 nil
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


PluggableButtonMorph(Morph)>>handleFocusEvent:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		anEvent: 	[(917@434) mouseUp 410596017 nil
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(917@434) mouseUp 410596017 nil]
		focusHolder: 	a PluggableButtonMorph(300701440)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(431164160) [world]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(917@434.0) corner: (933@450.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(917@434) mouseUp 410596017 nil]
		targetOffset: 	(62.0@17.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410596017 917 434 0 0 0 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc..
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	111
		numArgs: 	0


WorldMorph>>becomeActiveDuring:
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(431164160) [world]
		priorHand: 	a HandMorph(196406272)
		priorEvent: 	[(917@434) mouseOver red 410595969 nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a SpecD...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(917@434) mouseUp 410596017 nil]
		focusHolder: 	a PluggableButtonMorph(300701440)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		bounds: 	(917@434.0) corner: (933@450.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(917@434) mouseUp 410596017 nil]
		targetOffset: 	(62.0@17.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410596017 917 434 0 0 0 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(917@434) mouseUp 410596017 nil]
		focusHolder: 	a PluggableButtonMorph(300701440)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(917@434.0) corner: (933@450.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(917@434) mouseUp 410596017 nil]
		targetOffset: 	(62.0@17.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410596017 917 434 0 0 0 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(917@434) mouseUp 410596017 nil
	Receiver's instance variables: 
		bounds: 	(917@434.0) corner: (933@450.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(917@434) mouseUp 410596017 nil]
		targetOffset: 	(62.0@17.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410596017 917 434 0 0 0 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(917@434) mouseUp 410596017 nil]
		evt: 	[(917@434) mouseUp 410596017 nil
	Receiver's instance variables: 
		bounds: 	(917@434.0) corner: (933@450.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(917@434) mouseUp 410596017 nil]
		targetOffset: 	(62.0@17.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410596017 917 434 0 0 0 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEventQueue: 	an InputEventSensor
		evt: 	[(917@434) mouseUp 410596017 nil]
		evtBuf: 	#(1 410596017 917 434 0 0 0 1)
		type: 	1
		hadAny: 	fals
	Receiver's instance variables: 
		bounds: 	(917@434.0) corner: (933@450.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(917@434) mouseUp 410596017 nil]
		targetOffset: 	(62.0@17.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410596017 917 434 0 0 0 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEvents
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(917@434.0) corner: (933@450.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(917@434) mouseUp 410596017 nil]
		targetOffset: 	(62.0@17.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410596017 917 434 0 0 0 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		h: 	a HandMorph(196406272
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410595973
		lastStepMessage: 	nil
		lastCycleTime: 	410596017
		alarms: 	a Heap()
		lastAlarmTime: 	410595973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(196406272))
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ]
		index: 	
	Receiver's instance variables: 
an Array(a HandMorph(196406272))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil 
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410595973
		lastStepMessage: 	nil
		lastCycleTime: 	410596017
		alarms: 	a Heap()
		lastAlarmTime: 	410595973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410595973
		lastStepMessage: 	nil
		lastCycleTime: 	410596017
		alarms: 	a Heap()
		lastAlarmTime: 	410595973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410595973
		lastStepMessage: 	nil
		lastCycleTime: 	410596017
		alarms: 	a Heap()
		lastAlarmTime: 	410595973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a SpecD...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
IceTipLocalRepositoryPanel(Object)>>assert:description:
IceTipLocalRepositoryPanel>>validate
[ dialog validate.
self repositoryModel updateLocation: dialog location.
true ] in IceTipRepairLocateRepository>>basicExecute
[ okAction value value == false
	ifFalse: [ owner ifNil: [ self delete ] ifNotNil: [ owner delete ] ] ] in OkCancelToolbar(OkToolbar)>>okActionBlock
ButtonPresenter>>performAction
MorphicButtonAdapter>>action
PluggableButtonMorph>>performAction:
[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTrue: [ m performAction: evt ] ] ] in PluggableButtonMorph>>mouseUp:
Array(SequenceableCollection)>>do:
PluggableButtonMorph>>mouseUp:
PluggableButtonMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
PluggableButtonMorph(Morph)>>handleEvent:
PluggableButtonMorph(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
AssertionFailure: Project location does not seems to be a valid git repository.
8 November 2019 1:55:16.983541 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

IceTipLocalRepositoryPanel(Object)>>assert:description:
	Receiver: an IceTipLocalRepositoryPanel
	Arguments and temporary variables: 
		aBlock: 	false
		aStringOrBlock: 	'Project location does not seems to be a valid git repository.'...etc..
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(an IceTipDirectoryPresenter an OkCancelToolbar...etc...
		owner: 	nil
		window: 	a NewValueHolder[ a DialogWindowPresenter ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Import from existing clone' ]
		projectLocation: 	an IceTipDirectoryPresenter
		remoteLabel: 	nil
		remoteInputText: 	nil
		spacePanel: 	a MorphicGenericAdapter
		repository: 	nil


IceTipLocalRepositoryPanel>>validate
	Receiver: an IceTipLocalRepositoryPanel
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter a MorphicContainerAdapt...etc...
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(an IceTipDirectoryPresenter an OkCancelToolbar...etc...
		owner: 	nil
		window: 	a NewValueHolder[ a DialogWindowPresenter ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Import from existing clone' ]
		projectLocation: 	an IceTipDirectoryPresenter
		remoteLabel: 	nil
		remoteInputText: 	nil
		spacePanel: 	a MorphicGenericAdapter
		repository: 	nil


[ dialog validate.
self repositoryModel updateLocation: dialog location.
true ] in IceTipRepairLocateRepository>>basicExecute
	Receiver: an IceTipRepairLocateRepository
	Arguments and temporary variables: 
		dialog: 	an IceTipLocalRepositoryPane
	Receiver's instance variables: 
		repository: 	nil
		successBlock: 	nil
		repositoryModel: 	an IceTipCachedModel(an IceTipRepositoryModel)


[ okAction value value == false
	ifFalse: [ owner ifNil: [ self delete ] ifNotNil: [ owner delete ] ] ] in OkCancelToolbar(OkToolbar)>>okActionBlock
	Receiver: an OkCancelToolbar
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicContainerAdapter)
		announcer: 	an Announcer
		focusOrder: 	an OrderedCollection(a ButtonPresenter a ButtonPresenter a DialogWi...etc...
		owner: 	a SpecDialogWindow(548925184) named: Import from existing clone
		window: 	a NewValueHolder[ nil ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary()
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Ok Cancel' ]
		okButton: 	a ButtonPresenter
		okAction: 	a NewValueHolder[ [ dialog validate.
self repositoryModel updateLocat...etc...
		cancelButton: 	a ButtonPresenter
		cancelAction: 	a NewValueHolder[ [ true ] ]
		cancelled: 	a NewValueHolder[ false ]


ButtonPresenter>>performAction
	Receiver: a ButtonPresenter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a MorphicButtonAdapter)
		announcer: 	an Announcer
		focusOrder: 	nil
		owner: 	an OkCancelToolbar
		window: 	a NewValueHolder[ nil ]
		spec: 	a SpecWrapper
		extentHolder: 	a NewValueHolder[ nil ]
		needRebuild: 	a NewValueHolder[ true ]
		additionalKeyBindings: 	a Dictionary(Character space->[ self action ] )
		keyStrokesForNextFocusHolder: 	a CollectionValueHolder[ an Array() ]
		keyStrokesForPreviousFocusHolder: 	a CollectionValueHolder[ an Array() ]
		windowIcon: 	a NewValueHolder[ nil ]
		aboutText: 	a NewValueHolder[ nil ]
		askOkToClose: 	a NewValueHolder[ false ]
		titleHolder: 	a CollectionValueHolder[ 'Button' ]
		helpHolder: 	a NewValueHolder[ nil ]
		borderWidth: 	a NewValueHolder[ 0 ]
		borderColor: 	a NewValueHolder[ Color transparent ]
		enabledHolder: 	a NewValueHolder[ true ]
		dragEnabled: 	a NewValueHolder[ false ]
		dropEnabled: 	a NewValueHolder[ false ]
		dragTransformationBlock: 	a NewValueHolder[ [ :item :source | item ] ]
		wantDropBlock: 	a NewValueHolder[ [ :draggedItem :event :source | self dropEnabl...etc...
		acceptDropBlock: 	a NewValueHolder[ [ :draggedItem :event :source |  ] ]
		transferBlock: 	a NewValueHolder[ [ :passenger :source | self defaultTransferFor...etc...
		color: 	a NewValueHolder[ nil ]
		actionHolder: 	a NewValueHolder[ [ okAction value value == false
	ifFalse: [ own...etc...
		labelHolder: 	a CollectionValueHolder[ 'Ok' ]
		fontHolder: 	a NewValueHolder[ nil ]
		stateHolder: 	a NewValueHolder[ false ]
		actionPerformedHolder: 	a NewValueHolder[ nil ]
		askBeforeChangingHolder: 	a NewValueHolder[ false ]
		iconHolder: 	a NewValueHolder[ nil ]
		menuHolder: 	a NewValueHolder[ a MenuPresenter ]
		shortcutHolder: 	a NewValueHolder[ nil ]


MorphicButtonAdapter>>action
	Receiver: a MorphicButtonAdapter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a PluggableButtonMorph(300701440))
		announcer: 	nil
		model: 	a ButtonPresenter
		widget: 	a PluggableButtonMorph(300701440)
		selector: 	nil


PluggableButtonMorph>>performAction:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		event: 	[(910@439) mouseUp 410619481 nil
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTrue: [ m performAction: evt ] ] ] in PluggableButtonMorph>>mouseUp:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		evt: 	[(910@439) mouseUp 410619481 nil]
		all: 	an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(30070144...etc...
		m: 	a PluggableButtonMorph(300701440
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


Array(SequenceableCollection)>>do:
	Receiver: an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(300701440))
	Arguments and temporary variables: 
		aBlock: 	[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTr...etc...
		index: 	
	Receiver's instance variables: 
an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(300701440))

PluggableButtonMorph>>mouseUp:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		evt: 	[(910@439) mouseUp 410619481 nil]
		all: 	an Array(a PluggableButtonMorph(861706240) a PluggableButtonMorph(30070144...etc..
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


PluggableButtonMorph(Morph)>>handleMouseUp:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		anEvent: 	[(910@439) mouseUp 410619481 nil]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


MouseButtonEvent>>sentTo:
	Receiver: [(910@439) mouseUp 410619481 nil]
	Arguments and temporary variables: 
		anObject: 	a PluggableButtonMorph(300701440
	Receiver's instance variables: 
		timeStamp: 	410619481
		source: 	a HandMorph(196406272)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(910@439)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


PluggableButtonMorph(Morph)>>handleEvent:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		anEvent: 	[(910@439) mouseUp 410619481 nil
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


PluggableButtonMorph(Morph)>>handleFocusEvent:
	Receiver: a PluggableButtonMorph(300701440)
	Arguments and temporary variables: 
		anEvent: 	[(910@439) mouseUp 410619481 nil
	Receiver's instance variables: 
		bounds: 	(855.0@417.0) corner: (936.0@445.0)
		owner: 	a PanelMorph(862498304)
		submorphs: 	an Array(an AlignmentMorph(555681280))
		fullBounds: 	nil
		color: 	(Color r: 0.2903225806451613 g: 0.2883675464320626 b: 0.2883675464320626...etc...
		extension: 	a MorphExtension (698908928) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MorphicButtonAdapter
		label: 	a Text for 'Ok'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#state
		actionSelector: 	#action
		font: 	nil
		getLabelSelector: 	#label
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#enabled
		getFontSelector: 	#font
		labelMorph: 	a TextMorph(902960128)
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(910@439) mouseUp 410619481 nil]
		focusHolder: 	a PluggableButtonMorph(300701440)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(431164160) [world]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(910@439.0) corner: (926@455.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(910@439.0) corner: (926@455.0)
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(910@439) mouseUp 410619481 nil]
		targetOffset: 	(57.0@22.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410619481 910 439 0 0 0 1)
		lastKeyScanCode: 	30
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc..
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	111
		numArgs: 	0


WorldMorph>>becomeActiveDuring:
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(431164160) [world]
		priorHand: 	a HandMorph(196406272)
		priorEvent: 	[(910@439) mouseOver red 410619481 nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a SpecD...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(910@439) mouseUp 410619481 nil]
		focusHolder: 	a PluggableButtonMorph(300701440)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		bounds: 	(910@439.0) corner: (926@455.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(910@439.0) corner: (926@455.0)
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(910@439) mouseUp 410619481 nil]
		targetOffset: 	(57.0@22.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410619481 910 439 0 0 0 1)
		lastKeyScanCode: 	30
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(910@439) mouseUp 410619481 nil]
		focusHolder: 	a PluggableButtonMorph(300701440)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	ni
	Receiver's instance variables: 
		bounds: 	(910@439.0) corner: (926@455.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(910@439.0) corner: (926@455.0)
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(910@439) mouseUp 410619481 nil]
		targetOffset: 	(57.0@22.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410619481 910 439 0 0 0 1)
		lastKeyScanCode: 	30
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(910@439) mouseUp 410619481 nil
	Receiver's instance variables: 
		bounds: 	(910@439.0) corner: (926@455.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(910@439.0) corner: (926@455.0)
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(910@439) mouseUp 410619481 nil]
		targetOffset: 	(57.0@22.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410619481 910 439 0 0 0 1)
		lastKeyScanCode: 	30
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEvent: 	[(910@439) mouseUp 410619481 nil]
		evt: 	[(910@439) mouseUp 410619481 nil
	Receiver's instance variables: 
		bounds: 	(910@439.0) corner: (926@455.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(910@439.0) corner: (926@455.0)
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(910@439) mouseUp 410619481 nil]
		targetOffset: 	(57.0@22.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410619481 910 439 0 0 0 1)
		lastKeyScanCode: 	30
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 
		anEventQueue: 	an InputEventSensor
		evt: 	[(910@439) mouseUp 410619481 nil]
		evtBuf: 	#(1 410619481 910 439 0 0 0 1)
		type: 	1
		hadAny: 	fals
	Receiver's instance variables: 
		bounds: 	(910@439.0) corner: (926@455.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(910@439.0) corner: (926@455.0)
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(910@439) mouseUp 410619481 nil]
		targetOffset: 	(57.0@22.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410619481 910 439 0 0 0 1)
		lastKeyScanCode: 	30
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEvents
	Receiver: a HandMorph(196406272)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(910@439.0) corner: (926@455.0)
		owner: 	a WorldMorph(431164160) [world]
		submorphs: 	#()
		fullBounds: 	(910@439.0) corner: (926@455.0)
		color: 	Color blue
		extension: 	a MorphExtension (979726592) [other:  (kmDispatcher -> a KMDispatche...etc...
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(300701440)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(910@439) mouseUp 410619481 nil]
		targetOffset: 	(57.0@22.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 410619481 910 439 0 0 0 1)
		lastKeyScanCode: 	30
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		h: 	a HandMorph(196406272
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410619481
		lastStepMessage: 	nil
		lastCycleTime: 	410619513
		alarms: 	a Heap()
		lastAlarmTime: 	410619481
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(196406272))
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ]
		index: 	
	Receiver's instance variables: 
an Array(a HandMorph(196406272))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil 
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410619481
		lastStepMessage: 	nil
		lastCycleTime: 	410619513
		alarms: 	a Heap()
		lastAlarmTime: 	410619481
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410619481
		lastStepMessage: 	nil
		lastCycleTime: 	410619513
		alarms: 	a Heap()
		lastAlarmTime: 	410619481
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	410619481
		lastStepMessage: 	nil
		lastCycleTime: 	410619513
		alarms: 	a Heap()
		lastAlarmTime: 	410619481
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a SpecD...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
IceTipLocalRepositoryPanel(Object)>>assert:description:
IceTipLocalRepositoryPanel>>validate
[ dialog validate.
self repositoryModel updateLocation: dialog location.
true ] in IceTipRepairLocateRepository>>basicExecute
[ okAction value value == false
	ifFalse: [ owner ifNil: [ self delete ] ifNotNil: [ owner delete ] ] ] in OkCancelToolbar(OkToolbar)>>okActionBlock
ButtonPresenter>>performAction
MorphicButtonAdapter>>action
PluggableButtonMorph>>performAction:
[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTrue: [ m performAction: evt ] ] ] in PluggableButtonMorph>>mouseUp:
Array(SequenceableCollection)>>do:
PluggableButtonMorph>>mouseUp:
PluggableButtonMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
PluggableButtonMorph(Morph)>>handleEvent:
PluggableButtonMorph(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ReversiGame class did not understand #start
8 November 2019 2:10:59.026147 pm

VM: unix - x86_64 - linux-gnu - CoInterpreter VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2509 uuid: 91e81f64-95de-4914-a960-8f842be3a194 Feb  6 2019
VM: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Wed Feb 6 15:51:18 2019 CommitHash: a838346b Plugins: 201902062351 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo8.0.0 [Build information: Pharo-8.0.0+build.932.sha.2de631724792021c10ec8a4dc69024a1ddf7997d (64 Bit)]

ReversiGame class(Object)>>doesNotUnderstand: #start
	Receiver: ReversiGame
	Arguments and temporary variables: 
		aMessage: 	start
		exception: 	MessageNotUnderstood: ReversiGame class>>start
		resumeValue: 	ni
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#endGame->ReversiGame>>#endGame #initialize->Rev...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ReversiGame
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Reversi


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	ni
	Receiver's instance variables: 
		ast: 	DoIt
	^ ReversiGame
		new;
		start
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	ni
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | text selection: result 
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(780330240)
		findReplaceService: 	nil
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy
		completionEngine: 	a CompletionEngine


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(780330240)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc..
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (515@31)
		owner: 	a TransformWithLayoutMorph(331738880)
		submorphs: 	an Array(a RubPrimarySelectionMorph(749246464) a RubCursor(878047232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (908360960) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(80497664)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(878047232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(259572736))
		getMenuPolicy: 	a RubEditingArea(780330240)
		mouseDownPoint: 	nil
		completionEngine: 	a CompletionEngine
		maxLength: 	nil
		findReplaceService: 	a SpRubFindReplaceService
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluat
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(11960576)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc..
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	411561521
		lastStepMessage: 	nil
		lastCycleTime: 	411561548
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	411561521
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	411561521
		lastStepMessage: 	nil
		lastCycleTime: 	411561548
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	411561521
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(431164160) [world
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(196406272))
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(992577536) named: Pl...etc...
		lastStepTime: 	411561521
		lastStepMessage: 	nil
		lastCycleTime: 	411561548
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(878047232)))
		lastAlarmTime: 	411561521
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(196406272)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...
		worldRenderer: 	a VMWorldRenderer
		realWindowExtent: 	(1629@995)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(431164160) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1629@995)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(752053504) a TaskbarMorph(751276800) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1629@995)
		color: 	(Color r: 0.29521016617790813 g: 0.29521016617790813 b: 0.29521016617790...etc...
		extension: 	a MorphExtension (106631680) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8611925708699902 g: 1.0 b: 0.7223851417399805 alpha: 1...etc...
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65547
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->nil #CursorOwnerWorld->a WorldMorph(43...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	125
		numArgs: 	0



--- The full stack ---
ReversiGame class(Object)>>doesNotUnderstand: #start
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

